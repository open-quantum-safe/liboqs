version: 2.1

# CircleCI doesn't handle large file sets properly for local builds
# https://github.com/CircleCI-Public/circleci-cli/issues/281#issuecomment-472808051
localCheckout: &localCheckout
  run: |-
    PROJECT_PATH=$(cd ${CIRCLE_WORKING_DIRECTORY}; pwd)
    mkdir -p ${PROJECT_PATH}
    git config --global --add safe.directory /tmp/_circleci_local_build_repo
    cd /tmp/_circleci_local_build_repo
    git ls-files -z | xargs -0 -s 2090860 tar -c | tar -x -C ${PROJECT_PATH}
    cp -a /tmp/_circleci_local_build_repo/.git ${PROJECT_PATH}

jobs:
  trigger-downstream-ci:
    docker:
      - image: cimg/base:2020.01
# Re-enable iff docker enforces rate limitations without auth:
#        auth:
#          username: $DOCKER_LOGIN
#          password: $DOCKER_PASSWORD
    steps:
      - run:
          name: Trigger OQS-OpenSSL CI
          command: |2
            curl --silent \
                 --write-out "\n%{response_code}\n" \
                 --user ${BUILD_TRIGGER_TOKEN}: \
                 --request POST \
                 --header "Content-Type: application/json" \
                 --data '{ "branch": "OQS-OpenSSL_1_1_1-stable", "parameters": { "run_downstream_tests": true } }' \
                 https://circleci.com/api/v2/project/gh/open-quantum-safe/openssl/pipeline | tee curl_out \
            && grep -q "201" curl_out

      - run:
          name: Trigger OQS-BoringSSL CI
          command: |2
            curl --silent \
                 --write-out "\n%{response_code}\n" \
                 --user ${BUILD_TRIGGER_TOKEN}: \
                 --request POST \
                 --header "Content-Type: application/json" \
                 --data '{ "branch": "master", "parameters": { "run_downstream_tests": true } }' \
                 https://circleci.com/api/v2/project/gh/open-quantum-safe/boringssl/pipeline | tee curl_out \
            && grep -q "201" curl_out
      - run:
          name: Trigger OQS-OpenSSH CI
          command: |2
            curl --silent \
                 --write-out "\n%{response_code}\n" \
                 --user ${BUILD_TRIGGER_TOKEN}: \
                 --request POST \
                 --header "Content-Type: application/json" \
                 --data '{ "branch": "OQS-v8", "parameters": { "run_downstream_tests": true } }' \
                 https://circleci.com/api/v2/project/gh/open-quantum-safe/openssh/pipeline | tee curl_out \
            && grep -q "201" curl_out
      - run:
          name: Trigger oqs-provider CI
          command: |2
            curl --silent \
                 --write-out "\n%{response_code}\n" \
                 --user ${BUILD_TRIGGER_TOKEN}: \
                 --request POST \
                 --header "Content-Type: application/json" \
                 --data '{ "branch": "main" }' \
                 https://circleci.com/api/v2/project/gh/open-quantum-safe/oqs-provider/pipeline | tee curl_out \
            && grep -q "201" curl_out
      - run:
          name: Trigger liboqs-dotnet CI
          command: |2
            curl --silent \
                 --write-out "\n%{response_code}\n" \
                 --user ${BUILD_TRIGGER_TOKEN}: \
                 --request POST \
                 --header "Content-Type: application/json" \
                 --data '{ "branch": "master" }' \
                 https://circleci.com/api/v2/project/gh/open-quantum-safe/liboqs-dotnet/pipeline | tee curl_out \
            && grep -q "201" curl_out
      - run:
          name: Trigger liboqs-java CI
          command: |2
            curl --silent \
                 --write-out "\n%{response_code}\n" \
                 --user ${BUILD_TRIGGER_TOKEN}: \
                 --request POST \
                 --header "Content-Type: application/json" \
                 --data '{ "branch": "master" }' \
                 https://circleci.com/api/v2/project/gh/open-quantum-safe/liboqs-java/pipeline | tee curl_out \
            && grep -q "201" curl_out
      - run:
          name: Trigger liboqs-python CI
          command: |2
            curl --silent \
                 --write-out "\n%{response_code}\n" \
                 --request POST \
                 --header "Accept: application/vnd.github+json" \
                 --header "Authorization: Bearer $OQSBOT_GITHUB_ACTIONS" \
                 --header "X-GitHub-Api-Version: 2022-11-28" \
                 --data '{"event_type":"liboqs-upstream-trigger"}' \
                 https://api.github.com/repos/open-quantum-safe/liboqs-python/dispatches | tee curl_out \
            && grep -q "204" curl_out

workflows:
  version: 2.1
  commit-to-main:
    when:
      equal: [ main, << pipeline.git.branch >> ]
    jobs:
      - trigger-downstream-ci:
          context: openquantumsafe
