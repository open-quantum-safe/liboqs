version: 2.1

require_stylecheck: &require_stylecheck
  requires:
    - stylecheck

# CircleCI doesn't handle large file sets properly for local builds
# https://github.com/CircleCI-Public/circleci-cli/issues/281#issuecomment-472808051
localCheckout: &localCheckout
  run: |-
    PROJECT_PATH=$(cd ${CIRCLE_WORKING_DIRECTORY}; pwd)
    mkdir -p ${PROJECT_PATH}
    cd /tmp/_circleci_local_build_repo
    git ls-files -z | xargs -0 -s 2090860 tar -c | tar -x -C ${PROJECT_PATH}
    cp -a /tmp/_circleci_local_build_repo/.git ${PROJECT_PATH}

jobs:
  stylecheck:
    description: Validate formatting of code and documentation
    docker:
      - image: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Ensure code conventions are upheld
          command: python3 -m pytest --verbose tests/test_code_conventions.py
      - run:
          name: Check that doxygen can parse the documentation
          command: mkdir -p build/docs && doxygen docs/.Doxyfile

  linux_x64:
    description: A template for running liboqs tests on x64 Linux Docker VMs
    parameters:
      CONTAINER:
        description: "The docker container to use."
        type: string
      CMAKE_ARGS:
        description: "Arguments to pass to CMake."
        type: string
        default: ''
      PYTEST_ARGS:
        description: "Arguments to pass to pytest."
        type: string
        # Not every executor handles --numprocesses=auto being passed to pytest well
        # See https://github.com/open-quantum-safe/liboqs/issues/738#issuecomment-621394744
        default: --numprocesses=auto
    docker:
      - image: << parameters.CONTAINER >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Configure
          command: mkdir build && cd build && source ~/.bashrc && cmake -GNinja << parameters.CMAKE_ARGS >> .. && cmake -LA ..
      - run:
          name: Build
          command: ninja
          working_directory: build
      - run:
          name: Run tests
          command: python3 -m pytest --verbose --ignore=tests/test_code_conventions.py --junitxml=build/test-results/pytest/test-results.xml << parameters.PYTEST_ARGS >>
      - store_test_results: # Note that this command will fail when running CircleCI locally, that is expected behaviour
          path: build/test-results
      - store_artifacts:
          path: build/test-results

  arm_emulated:
    description: A template for running liboqs tests on emulated ARM Docker VMs
    parameters:
      ARCH:
        description: "The desired ARM architecture to be emulated."
        type: string
      CMAKE_ARGS:
        description: "Arguments to pass to CMake."
        type: string
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Install the emulation handlers
          command: docker run --rm --privileged multiarch/qemu-user-static:register --reset
      - run:
          name: Run the tests in a container
          command: |
            docker run -e SKIP_TESTS=style --rm -v `pwd`:`pwd` -w `pwd` openquantumsafe/ci-debian-buster-<< parameters.ARCH >>:latest /bin/bash -c "
            uname -a &&
            file /bin/ls &&
            mkdir build &&
            (cd build &&
            cmake -GNinja << parameters.CMAKE_ARGS >> .. && cmake -LA .. &&
            ninja) &&
            python3 -m pytest --verbose --numprocesses=auto --ignore=tests/test_code_conventions.py --junitxml=build/test-results/pytest/test-results.xml
            "
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/test-results

  macOS:
    description: A template for running liboqs tests on macOS
    parameters:
      CMAKE_ARGS:
        description: "Arguments to pass to CMake."
        type: string
      PYTEST_ARGS:
        description: "Arguments to pass to pytest."
        type: string
        default: ""
    macos:
      xcode: "11.3.0"
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Install dependencies
          command: brew unlink python@2 && env HOMEBREW_NO_AUTO_UPDATE=1 brew install cmake ninja && pip3 install pytest pytest-xdist
      - run:
          name: Get system information
          command: sysctl -a | grep machdep.cpu
      - run:
          name: Configure
          command: mkdir build && cd build && source ~/.bashrc && cmake -GNinja << parameters.CMAKE_ARGS >> .. && cmake -LA ..
      - run:
          name: Build
          command: ninja
          working_directory: build
      - run:
          name: Run tests
          command: python3 -m pytest --verbose --ignore=tests/test_code_conventions.py --junitxml=build/test-results/pytest/test-results.xml << parameters.PYTEST_ARGS >>
      - store_test_results: # Note that this command will fail when running CircleCI locally, that is expected behaviour
          path: build/test-results
      - store_artifacts:
          path: build/test-results

  trigger-downstream-ci:
    docker:
      - image: cimg/base:2020.01
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    steps:
      - run:
          name: Trigger OQS-OpenSSL CI
          command: |
            curl -u ${BUILD_TRIGGER_TOKEN}: \
                 -X POST \
                 --header "Content-Type: application/json" \
                 -d '{ "branch": "OQS-OpenSSL_1_1_1-stable", "parameters": { "run_downstream_tests": true } }' \
                 https://circleci.com/api/v2/project/gh/open-quantum-safe/openssl/pipeline
      - run:
          name: Trigger OQS-BoringSSL CI
          command: |
            curl -u ${BUILD_TRIGGER_TOKEN}: \
                 -X POST \
                 --header "Content-Type: application/json" \
                 -d '{ "branch": "master", "parameters": { "run_downstream_tests": true } }' \
                 https://circleci.com/api/v2/project/gh/open-quantum-safe/boringssl/pipeline
      - run:
          name: Trigger OQS-OpenSSH CI
          command: |
            curl -u ${BUILD_TRIGGER_TOKEN}: \
                 -X POST \
                 --header "Content-Type: application/json" \
                 -d '{ "branch": "OQS-master", "parameters": { "run_downstream_tests": true } }' \
                 https://circleci.com/api/v2/project/gh/open-quantum-safe/openssh/pipeline

workflows:
  version: 2.1
  build:
    when:
      not:
        equal: [ master, << pipeline.git.branch >> ]
    jobs:
      - stylecheck
      - linux_x64:
          <<: *require_stylecheck
          name: alpine-noopenssl
          context: openquantumsafe
          CONTAINER: openquantumsafe/ci-alpine-amd64:latest
          CMAKE_ARGS: -DCMAKE_BUILD_TYPE=Release -DOQS_USE_OPENSSL=OFF
      - linux_x64:
          <<: *require_stylecheck
          name: alpine
          context: openquantumsafe
          CONTAINER: openquantumsafe/ci-alpine-amd64:latest
          CMAKE_ARGS: -DCMAKE_BUILD_TYPE=Release -DOQS_USE_OPENSSL=ON -DBUILD_SHARED_LIBS=ON
      - linux_x64:
          <<: *require_stylecheck
          name: centos-8
          context: openquantumsafe
          CONTAINER: openquantumsafe/ci-centos-8-amd64:latest
          CMAKE_ARGS: -DCMAKE_C_COMPILER=clang -DCMAKE_BUILD_TYPE=Release -DOQS_PORTABLE_BUILD=OFF
      - linux_x64:
          <<: *require_stylecheck
          name: debian-buster
          context: openquantumsafe
          CONTAINER: openquantumsafe/ci-debian-buster-amd64:latest
      - linux_x64:
          <<: *require_stylecheck
          name: ubuntu-bionic-noopenssl
          context: openquantumsafe
          CONTAINER: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
          CMAKE_ARGS: -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_BUILD_TYPE=Release -DOQS_USE_OPENSSL=OFF
      - linux_x64:
          <<: *require_stylecheck
          name: ubuntu-bionic-shared-noopenssl
          context: openquantumsafe
          CONTAINER: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
          CMAKE_ARGS: -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_BUILD_TYPE=Release -DOQS_USE_OPENSSL=OFF -DBUILD_SHARED_LIBS=ON
          PYTEST_ARGS: --ignore=tests/test_namespace.py --numprocesses=auto
      - linux_x64:
          <<: *require_stylecheck
          name: ubuntu-bionic-clang9
          context: openquantumsafe
          CONTAINER: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
          CMAKE_ARGS: -DCMAKE_C_COMPILER=clang-9
      - linux_x64:
          <<: *require_stylecheck
          name: address-sanitizer
          context: openquantumsafe
          CONTAINER: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
          CMAKE_ARGS: -DCMAKE_C_COMPILER=clang-9 -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER=Address
      # Disabling for now due to bunch of persistent failures.
      #- linux_x64:
      #    <<: *exclude_master
      #    <<: *require_stylecheck
      #    name: undefined-sanitizer
      #    context: openquantumsafe
      #    CONTAINER: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
      #    CMAKE_ARGS: -DCMAKE_C_COMPILER=clang-9 -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER=Undefined
      #    Normally the linux tests are run with 35 processes, but that
      #    exhausts memory for this test
      #    PYTEST_ARGS: --numprocesses=1

      # SPHINCS exhausts memory on CircleCI servers
      # for these configurations.
      - arm_emulated:
          <<: *require_stylecheck
          name: arm64
          ARCH: arm64
          CMAKE_ARGS: -DOQS_ENABLE_SIG_SPHINCS=OFF
      - arm_emulated:
          <<: *require_stylecheck
          name: armhf
          ARCH: armhf
          CMAKE_ARGS: -DOQS_ENABLE_SIG_SPHINCS=OFF
      - arm_emulated:
          <<: *require_stylecheck
          name: armel
          ARCH: armel
          CMAKE_ARGS: -DCMAKE_BUILD_TYPE=Release  -DOQS_ENABLE_SIG_SPHINCS=OFF

      - macOS:
          <<: *require_stylecheck
          name: macOS-noopenssl
          CMAKE_ARGS: -DOQS_USE_OPENSSL=OFF
      - macOS:
          <<: *require_stylecheck
          name: macOS-shared
          CMAKE_ARGS: -DBUILD_SHARED_LIBS=ON

  commit-to-master:
    when:
      equal: [ master, << pipeline.git.branch >> ]
    jobs:
      - trigger-downstream-ci:
          context: openquantumsafe
