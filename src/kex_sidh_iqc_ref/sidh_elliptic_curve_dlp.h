/*
 * Copyright (C) 2016 Javad Doliskani, javad.doliskani@uwaterloo.ca
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


#ifndef ELLIPTIC_CURVE_DLP_H
#define ELLIPTIC_CURVE_DLP_H

#include "sidh_elliptic_curve.h"

#ifdef __cplusplus
extern "C" {
#endif


/**
 * Computes the discrete logarithm {@code P = x * Q} in a group of order 
 * {@code l^e} generated by {@code P}. The Pohligâ€“Hellman algorithm is used.
 * @param x the discrete logarithm if it exists, or -1 otherwise
 * @param P the generator of the cyclic group
 * @param Q an element in the the group generated by {@code P}
 * @param E
 * @param l a prime number
 * @param e a positive integer
 */
void oqs_sidh_iqc_ref_elliptic_curve_prime_power_dlp(mpz_t x,
                                                     const point_t P,
                                                     const point_t Q,
                                                     const elliptic_curve_t E,
                                                     long l,
                                                     long e);

/**
 * Computes the discrete logarithm {@code P = x * Q} in a group of order 
 * {@code l} generated by {@code P}.
 * @param P the generator of the cyclic group
 * @param Q an element in the the group generated by {@code P}
 * @param E
 * @param l a prime number
 * @return the discrete logarithm if it exists, or -1 otherwise
 */
long oqs_sidh_iqc_ref_elliptic_curve_prime_dlp(const point_t P,
                                               const point_t Q,
                                               const elliptic_curve_t E,
                                               long l);


#ifdef __cplusplus
}
#endif

#endif /* ELLIPTIC_CURVE_DLP_H */

