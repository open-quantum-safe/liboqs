/*
 * Copyright (c) 2024 The mlkem-native project authors
 * SPDX-License-Identifier: Apache-2.0
 */

#include "../../../common.h"
#if defined(MLKEM_NATIVE_ARITH_BACKEND_AARCH64_OPT)

/*
 * Some modular arithmetic macros
 */

/* Barrett reduction */
.macro barrett_reduce a
        sqdmulh tmp.8h,   \a\().8h, modulus_twisted.h[0]
        srshr   tmp.8h,   tmp.8h,   #11
        mls     \a\().8h, tmp.8h,   modulus.h[0]
.endm

/* Montgomery multiplication, with precomputed Montgomery twist
 * Expects modulus in consts.h[0]. */
.macro mulmod dst, src, const, const_twisted
        sqrdmulh tmp0.8h,    \src\().8h, \const_twisted\().8h
        mul      \dst\().8h, \src\().8h, \const\().8h
        mls      \dst\().8h, tmp0.8h,    modulus.h[0]
.endm

/* Turns signed-canonical to unsigned canonical representative
 * through conditional addition of the modulus.
 *
 * Expected modulus in `modulus`. */
.macro scalar_signed_to_unsigned a
        sshr mask.8h, \a\().8h, #15
        and mask.16b, modulus.16b, mask.16b
        add \a\().8h, \a\().8h, mask.8h
.endm

/**********************************
 *          poly_reduce()         *
 **********************************/

.global MLKEM_ASM_NAMESPACE(poly_reduce_asm_opt)

        ptr               .req x0
        count             .req x1
        wtmp              .req w2

        data              .req v0
        q_data            .req q0

        tmp               .req v1
        mask              .req v2
        modulus           .req v3
        modulus_twisted   .req v4

.balign 4
MLKEM_ASM_NAMESPACE(poly_reduce_asm_opt):

        mov wtmp, #3329 // ML-KEM modulus
        dup modulus.8h, wtmp

        mov wtmp, #20159 // Barrett twist of 1 wrt 2^27
        dup modulus_twisted.8h, wtmp

        mov count, #8
                                               // Instructions:    15
                                               // Expected cycles: 22
                                               // Expected IPC:    0.68

                                               // Cycle bound:     22.0
                                               // IPC bound:       0.68

                                               // Wall time:     0.05s
                                               // User time:     0.05s

                                               // ----- cycle (expected) ------>
                                               // 0                        25
                                               // |------------------------|----
        ldr q21, [x0, #32]                     // *.............................
        ldr q23, [x0, #48]                     // ..*...........................
        sqdmulh v7.8H, v21.8H, v4.H[0]         // ....*.........................
        sqdmulh v30.8H, v23.8H, v4.H[0]        // ......*.......................
        srshr v7.8H, v7.8H, #11                // ........*.....................
        srshr v30.8H, v30.8H, #11              // ..........*...................
        mls v21.8H, v7.8H, v3.H[0]             // ...........*..................
        mls v23.8H, v30.8H, v3.H[0]            // .............*................
        ldr q5, [x0, #16]                      // ..............*...............
        sshr v7.8H, v21.8H, #15                // ................*.............
        sshr v30.8H, v23.8H, #15               // .................*............
        and v7.16B, v3.16B, v7.16B             // ..................*...........
        add v21.8H, v21.8H, v7.8H              // ...................*..........
        and v7.16B, v3.16B, v30.16B            // ....................*.........
        add v16.8H, v23.8H, v7.8H              // .....................*........

                                                // ------ cycle (expected) ------>
                                                // 0                        25
                                                // |------------------------|-----
        // ldr q30, [x0, #32]                     // *..............................
        // sqdmulh v22.8H, v30.8H, v4.H[0]        // ....*..........................
        // ldr q2, [x0, #48]                      // ..*............................
        // srshr v19.8H, v22.8H, #11              // ........*......................
        // mls v30.8H, v19.8H, v3.H[0]            // ...........*...................
        // sqdmulh v25.8H, v2.8H, v4.H[0]         // ......*........................
        // sshr v31.8H, v30.8H, #15               // ................*..............
        // srshr v25.8H, v25.8H, #11              // ..........*....................
        // and v18.16B, v3.16B, v31.16B           // ..................*............
        // mls v2.8H, v25.8H, v3.H[0]             // .............*.................
        // add v21.8H, v30.8H, v18.8H             // ...................*...........
        // ldr q5, [x0, #16]                      // ..............*................
        // sshr v18.8H, v2.8H, #15                // .................*.............
        // and v27.16B, v3.16B, v18.16B           // ....................*..........
        // add v16.8H, v2.8H, v27.8H              // .....................*.........

        sub count, count, #1
1:
                                               // Instructions:    32
                                               // Expected cycles: 36
                                               // Expected IPC:    0.89

                                               // Cycle bound:     36.0
                                               // IPC bound:       0.89

                                               // Wall time:     1.05s
                                               // User time:     1.05s

                                               // -------- cycle (expected) --------->
                                               // 0                        25
                                               // |------------------------|----------
        ldr q6, [x0], #64                      // *...................................
        ldr q30, [x0, #32]                     // ..e.................................
        sqdmulh v31.8H, v6.8H, v4.H[0]         // ....*...............................
        sqdmulh v29.8H, v5.8H, v4.H[0]         // .....*..............................
        sqdmulh v22.8H, v30.8H, v4.H[0]        // ......e.............................
        str q16, [x0, #-16]                    // .......*............................
        srshr v20.8H, v31.8H, #11              // ........*...........................
        srshr v28.8H, v29.8H, #11              // .........*..........................
        str q21, [x0, #-32]                    // ..........*.........................
        mls v6.8H, v20.8H, v3.H[0]             // ...........*........................
        mls v5.8H, v28.8H, v3.H[0]             // ............*.......................
        ldr q2, [x0, #48]                      // .............e......................
        sshr v31.8H, v6.8H, #15                // ...............*....................
        srshr v19.8H, v22.8H, #11              // ................e...................
        and v22.16B, v3.16B, v31.16B           // .................*..................
        add v0.8H, v6.8H, v22.8H               // ..................*.................
        mls v30.8H, v19.8H, v3.H[0]            // ...................e................
        sshr v26.8H, v5.8H, #15                // ....................*...............
        sqdmulh v25.8H, v2.8H, v4.H[0]         // .....................e..............
        and v17.16B, v3.16B, v26.16B           // ......................*.............
        add v1.8H, v5.8H, v17.8H               // .......................*............
        sshr v31.8H, v30.8H, #15               // ........................e...........
        srshr v25.8H, v25.8H, #11              // .........................e..........
        str q1, [x0, #-48]                     // ..........................*.........
        and v18.16B, v3.16B, v31.16B           // ...........................e........
        mls v2.8H, v25.8H, v3.H[0]             // ............................e.......
        add v21.8H, v30.8H, v18.8H             // .............................e......
        ldr q5, [x0, #16]                      // ..............................e.....
        sshr v18.8H, v2.8H, #15                // ................................e...
        str q0, [x0, #-64]                     // .................................*..
        and v27.16B, v3.16B, v18.16B           // ..................................e.
        add v16.8H, v2.8H, v27.8H              // ...................................e

                                                // ------------------------ cycle (expected) ------------------------->
                                                // 0                        25                       50
                                                // |------------------------|------------------------|-----------------
        // ldr q0, [x0], #64                      // ..................................*.................................
        // sqdmulh v1.8h,   v0.8h, v4.h[0]        // ..~...............................'...*.............................
        // srshr   v1.8h,   v1.8h,   #11          // ......~...........................'.......*.........................
        // mls     v0.8h, v1.8h,   v3.h[0]        // .........~........................'..........*......................
        // sshr v2.8h, v0.8h, #15                 // .............~....................'..............*..................
        // and v2.16b, v3.16b, v2.16b             // ...............~..................'................*................
        // add v0.8h, v0.8h, v2.8h                // ................~.................'.................*...............
        // str q0, [x0, #-64]                     // ...............................~..'................................*
        // ldr q0, [x0, #-48]                     // ............................e.....'.............................~...
        // sqdmulh v1.8h,   v0.8h, v4.h[0]        // ...~..............................'....*............................
        // srshr   v1.8h,   v1.8h,   #11          // .......~..........................'........*........................
        // mls     v0.8h, v1.8h,   v3.h[0]        // ..........~.......................'...........*.....................
        // sshr v2.8h, v0.8h, #15                 // ..................~...............'...................*.............
        // and v2.16b, v3.16b, v2.16b             // ....................~.............'.....................*...........
        // add v0.8h, v0.8h, v2.8h                // .....................~............'......................*..........
        // str q0, [x0, #-48]                     // ........................~.........'.........................*.......
        // ldr q0, [x0, #-32]                     // e.................................'.~...............................
        // sqdmulh v1.8h,   v0.8h, v4.h[0]        // ....e.............................'.....~...........................
        // srshr   v1.8h,   v1.8h,   #11          // ..............e...................'...............~.................
        // mls     v0.8h, v1.8h,   v3.h[0]        // .................e................'..................~..............
        // sshr v2.8h, v0.8h, #15                 // ......................e...........'.......................~.........
        // and v2.16b, v3.16b, v2.16b             // .........................e........'..........................~......
        // add v0.8h, v0.8h, v2.8h                // ...........................e......'............................~....
        // str q0, [x0, #-32]                     // ........~.........................'.........*.......................
        // ldr q0, [x0, #-16]                     // ...........e......................'............~....................
        // sqdmulh v1.8h,   v0.8h, v4.h[0]        // ...................e..............'....................~............
        // srshr   v1.8h,   v1.8h,   #11          // .......................e..........'........................~........
        // mls     v0.8h, v1.8h,   v3.h[0]        // ..........................e.......'...........................~.....
        // sshr v2.8h, v0.8h, #15                 // ..............................e...'...............................~.
        // and v2.16b, v3.16b, v2.16b             // ................................e.'.................................
        // add v0.8h, v0.8h, v2.8h                // .................................e'.................................
        // str q0, [x0, #-16]                     // .....~............................'......*..........................

        sub count, count, 1
        cbnz count, 1b
                                               // Instructions:    17
                                               // Expected cycles: 23
                                               // Expected IPC:    0.74

                                               // Cycle bound:     23.0
                                               // IPC bound:       0.74

                                               // Wall time:     0.05s
                                               // User time:     0.05s

                                               // ----- cycle (expected) ------>
                                               // 0                        25
                                               // |------------------------|----
        sqdmulh v20.8H, v5.8H, v4.H[0]         // *.............................
        ldr q24, [x0], #64                     // .*............................
        str q21, [x0, #-32]                    // ...*..........................
        srshr v20.8H, v20.8H, #11              // ....*.........................
        sqdmulh v25.8H, v24.8H, v4.H[0]        // .....*........................
        str q16, [x0, #-16]                    // ......*.......................
        mls v5.8H, v20.8H, v3.H[0]             // .......*......................
        srshr v20.8H, v25.8H, #11              // .........*....................
        sshr v2.8H, v5.8H, #15                 // ...........*..................
        mls v24.8H, v20.8H, v3.H[0]            // ............*.................
        and v20.16B, v3.16B, v2.16B            // .............*................
        add v31.8H, v5.8H, v20.8H              // ..............*...............
        sshr v20.8H, v24.8H, #15               // ................*.............
        str q31, [x0, #-48]                    // .................*............
        and v31.16B, v3.16B, v20.16B           // ..................*...........
        add v24.8H, v24.8H, v31.8H             // ...................*..........
        str q24, [x0, #-64]                    // ......................*.......

                                               // ------ cycle (expected) ------>
                                               // 0                        25
                                               // |------------------------|-----
        // ldr q6, [x0], #64                     // .*.............................
        // sqdmulh v31.8H, v6.8H, v4.H[0]        // .....*.........................
        // sqdmulh v29.8H, v5.8H, v4.H[0]        // *..............................
        // str q16, [x0, #-16]                   // ......*........................
        // srshr v20.8H, v31.8H, #11             // .........*.....................
        // srshr v28.8H, v29.8H, #11             // ....*..........................
        // str q21, [x0, #-32]                   // ...*...........................
        // mls v6.8H, v20.8H, v3.H[0]            // ............*..................
        // mls v5.8H, v28.8H, v3.H[0]            // .......*.......................
        // sshr v31.8H, v6.8H, #15               // ................*..............
        // and v22.16B, v3.16B, v31.16B          // ..................*............
        // add v0.8H, v6.8H, v22.8H              // ...................*...........
        // sshr v26.8H, v5.8H, #15               // ...........*...................
        // and v17.16B, v3.16B, v26.16B          // .............*.................
        // add v1.8H, v5.8H, v17.8H              // ..............*................
        // str q1, [x0, #-48]                    // .................*.............
        // str q0, [x0, #-64]                    // ......................*........


        ret

        .unreq ptr
        .unreq count
        .unreq wtmp

        .unreq data
        .unreq q_data

        .unreq tmp
        .unreq mask
        .unreq modulus
        .unreq modulus_twisted

/********************************************
 *          poly_mulcache_compute()         *
 ********************************************/

.global MLKEM_ASM_NAMESPACE(poly_mulcache_compute_asm_opt)

        cache_ptr         .req x0
        data_ptr          .req x1
        zeta_ptr          .req x2
        zeta_twisted_ptr  .req x3
        count             .req x4
        wtmp              .req w5

        data_odd          .req v0
        zeta              .req v1
        q_zeta            .req q1
        zeta_twisted      .req v2
        q_zeta_twisted    .req q2

        tmp0              .req v3
        q_tmp0            .req q3
        tmp1              .req v4
        q_tmp1            .req q4
        dst               .req v5
        q_dst             .req q5

        modulus           .req v6
        modulus_twisted   .req v7

.balign 4
MLKEM_ASM_NAMESPACE(poly_mulcache_compute_asm_opt):
        mov wtmp, #3329
        dup modulus.8h, wtmp

        mov wtmp, #20159
        dup modulus_twisted.8h, wtmp

        mov count, #16
                                              // Instructions:    7
                                              // Expected cycles: 12
                                              // Expected IPC:    0.58

                                              // Cycle bound:     12.0
                                              // IPC bound:       0.58

                                              // Wall time:     0.01s
                                              // User time:     0.01s

                                              // ----- cycle (expected) ------>
                                              // 0                        25
                                              // |------------------------|----
        ldr q1, [x1, #16]                     // *.............................
        ldr q27, [x1], #32                    // ..*...........................
        ldr q23, [x2], #16                    // ....*.........................
        uzp2 v27.8H, v27.8H, v1.8H            // ......*.......................
        ldr q1, [x3], #16                     // .......*......................
        mul v2.8H, v27.8H, v23.8H             // .........*....................
        sqrdmulh v27.8H, v27.8H, v1.8H        // ...........*..................

                                               // ------ cycle (expected) ------>
                                               // 0                        25
                                               // |------------------------|-----
        // ldr q29, [x1, #16]                   // *..............................
        // ldr q21, [x2], #16                   // ....*..........................
        // ldr q27, [x1], #32                   // ..*............................
        // ldr q7, [x3], #16                    // .......*.......................
        // uzp2 v28.8H, v27.8H, v29.8H          // ......*........................
        // mul v2.8H, v28.8H, v21.8H            // .........*.....................
        // sqrdmulh v27.8H, v28.8H, v7.8H       // ...........*...................

        sub count, count, #1
1:
                                              // Instructions:    9
                                              // Expected cycles: 13
                                              // Expected IPC:    0.69

                                              // Cycle bound:     13.0
                                              // IPC bound:       0.69

                                              // Wall time:     0.09s
                                              // User time:     0.09s

                                              // ----- cycle (expected) ------>
                                              // 0                        25
                                              // |------------------------|----
        ldr q29, [x1, #16]                    // e.............................
        ldr q21, [x2], #16                    // ..e...........................
        mls v2.8H, v27.8H, v6.H[0]            // ....*.........................
        ldr q27, [x1], #32                    // .....e........................
        ldr q7, [x3], #16                     // .......e......................
        uzp2 v28.8H, v27.8H, v29.8H           // .........e....................
        str q2, [x0], #16                     // ..........*...................
        mul v2.8H, v28.8H, v21.8H             // ...........e..................
        sqrdmulh v27.8H, v28.8H, v7.8H        // ............e.................

                                                  // ------ cycle (expected) ------>
                                                  // 0                        25
                                                  // |------------------------|-----
        // ldr q3, [x1], #32                       // .....e.......'....~.......'....
        // ldr q4, [x1, #-16]                      // e............~............~....
        // ldr q1, [x2], #16                       // ..e..........'.~..........'.~..
        // ldr q2, [x3], #16                       // .......e.....'......~.....'....
        // uzp2 v0.8h, v3.8h, v4.8h                // .........e...'........~...'....
        // sqrdmulh v3.8h,    v0.8h, v2.8h         // ............e'...........~'....
        // mul      v5.8h, v0.8h, v1.8h            // ...........e.'..........~.'....
        // mls      v5.8h, v3.8h,    v6.h[0]       // ....~........'...*........'....
        // str q5, [x0], #16                       // ..........~..'.........*..'....

        sub count, count, 1
        cbnz count, 1b
                                          // Instructions:    2
                                          // Expected cycles: 5
                                          // Expected IPC:    0.40

                                          // Cycle bound:     5.0
                                          // IPC bound:       0.40

                                          // Wall time:     0.00s
                                          // User time:     0.00s

                                          // ----- cycle (expected) ------>
                                          // 0                        25
                                          // |------------------------|----
        mls v2.8H, v27.8H, v6.H[0]        // *.............................
        str q2, [x0], #16                 // ....*.........................

                                           // ------ cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|-----
        // mls v2.8H, v27.8H, v6.H[0]       // *..............................
        // str q2, [x0], #16                // ....*..........................


        ret

        .unreq cache_ptr
        .unreq data_ptr
        .unreq zeta_ptr
        .unreq zeta_twisted_ptr
        .unreq count
        .unreq wtmp

        .unreq data_odd
        .unreq zeta
        .unreq q_zeta
        .unreq zeta_twisted
        .unreq q_zeta_twisted

        .unreq tmp0
        .unreq q_tmp0
        .unreq tmp1
        .unreq q_tmp1
        .unreq dst
        .unreq q_dst

        .unreq modulus
        .unreq modulus_twisted

/********************************************
 *             poly_tobytes()               *
 ********************************************/
.global MLKEM_ASM_NAMESPACE(poly_tobytes_asm_opt)

        data0 .req v0
        data1 .req v1
        out0  .req v2
        out1  .req v3
        out2  .req v4
        tmp   .req v5

        dst   .req x0
        src   .req x1
        count .req x2

.balign 4
MLKEM_ASM_NAMESPACE(poly_tobytes_asm_opt):

        mov count, #16
poly_tobytes_asm_opt_asm_loop_start:
        ld2 {data0.8h, data1.8h}, [src], #32

        // r[3 * i + 0] = (t0 >> 0);
        xtn out0.8b, data0.8h

        // r[3 * i + 1] = (t0 >> 8);
        shrn out1.8b, data0.8h, #8
        xtn tmp.8b, data1.8h
        // r[3 * i + 1] = (t0 >> 8) | (t1 << 4);
        sli out1.8b, tmp.8b, #4

        // r[3 * i + 2] = (t1 >> 4);
        shrn out2.8b, data1.8h, #4

        st3 {out0.8b, out1.8b, out2.8b}, [dst], #24

        subs count, count, #1
        cbnz count, poly_tobytes_asm_opt_asm_loop_start
        ret

        .unreq data0
        .unreq data1
        .unreq out0
        .unreq out1
        .unreq out2
        .unreq tmp
        .unreq dst
        .unreq src
        .unreq count

/**********************************
 *          poly_tomont()         *
 **********************************/
.global MLKEM_ASM_NAMESPACE(poly_tomont_asm_opt)

        src               .req x0
        count             .req x1
        wtmp              .req w2

        data              .req v0
        q_data            .req q0
        res               .req v1
        q_res             .req q1

        factor            .req v2
        factor_t          .req v3
        modulus           .req v4
        modulus_twisted   .req v5

        tmp0              .req v6

.balign 4
MLKEM_ASM_NAMESPACE(poly_tomont_asm_opt):

        mov wtmp, #3329 // ML-KEM modulus
        dup modulus.8h, wtmp

        mov wtmp, #20159 // Barrett twist of 1 wrt 2^27
        dup modulus_twisted.8h, wtmp

        mov wtmp, #-1044 // 2^16 % 3329
        dup factor.8h, wtmp

        mov wtmp, #-10276 // Barrett twist of -1044 (wrt 2^16)
        dup factor_t.8h, wtmp

        mov count, #8
                                             // Instructions:    5
                                             // Expected cycles: 7
                                             // Expected IPC:    0.71
                                             //
                                             // Cycle bound:     7.0
                                             // IPC bound:       0.71
                                             //
                                             // Wall time:     0.01s
                                             // User time:     0.01s
                                             //
                                             // ----- cycle (expected) ------>
                                             // 0                        25
                                             // |------------------------|----
        ldr q26, [x0, #48]                   // *.............................
        ldr q23, [x0, #16]                   // ..*...........................
        mul v17.8H, v26.8H, v2.8H            // ....*.........................
        sqrdmulh v7.8H, v26.8H, v3.8H        // .....*........................
        ldr q27, [x0, #32]                   // ......*.......................

                                             // ------ cycle (expected) ------>
                                             // 0                        25
                                             // |------------------------|-----
        // ldr q7, [x0, #48]                 // *..............................
        // ldr q23, [x0, #16]                // ..*............................
        // mul v17.8H, v7.8H, v2.8H          // ....*..........................
        // sqrdmulh v7.8H, v7.8H, v3.8H      // .....*.........................
        // ldr q27, [x0, #32]                // ......*........................

        sub count, count, #1
1:
                                              // Instructions:    20
                                              // Expected cycles: 24
                                              // Expected IPC:    0.83
                                              //
                                              // Cycle bound:     24.0
                                              // IPC bound:       0.83
                                              //
                                              // Wall time:     0.73s
                                              // User time:     0.73s
                                              //
                                              // ----- cycle (expected) ------>
                                              // 0                        25
                                              // |------------------------|----
        mls v17.8H, v7.8H, v4.H[0]            // *.............................
        sqrdmulh v5.8H, v23.8H, v3.8H         // .*............................
        ldr q7, [x0], #64                     // ..*...........................
        str q17, [x0, #-16]                   // ....*.........................
        sqrdmulh v29.8H, v27.8H, v3.8H        // .....*........................
        sqrdmulh v19.8H, v7.8H, v3.8H         // ......*.......................
        mul v25.8H, v23.8H, v2.8H             // .......*......................
        mul v0.8H, v7.8H, v2.8H               // ........*.....................
        mul v26.8H, v27.8H, v2.8H             // .........*....................
        ldr q7, [x0, #48]                     // ..........e...................
        mls v25.8H, v5.8H, v4.H[0]            // ............*.................
        ldr q23, [x0, #16]                    // .............e................
        mls v26.8H, v29.8H, v4.H[0]           // ...............*..............
        mls v0.8H, v19.8H, v4.H[0]            // ................*.............
        str q25, [x0, #-48]                   // .................*............
        mul v17.8H, v7.8H, v2.8H              // ..................e...........
        sqrdmulh v7.8H, v7.8H, v3.8H          // ...................e..........
        str q0, [x0, #-64]                    // ....................*.........
        ldr q27, [x0, #32]                    // .....................e........
        str q26, [x0, #-32]                   // .......................*......

                                                  // --------- cycle (expected) ---------->
                                                  // 0                        25
                                                  // |------------------------|------------
        // ldr q0, [x0], #64                      // ..............'.*.....................
        // sqrdmulh v6.8h,    v0.8h, v3.8h        // ..............'.....*.................
        // mul      v1.8h, v0.8h, v2.8h           // ..............'.......*...............
        // mls      v1.8h, v6.8h,    v4.h[0]      // ......~.......'...............*.......
        // str q1, [x0, #-64]                     // ..........~...'...................*...
        // ldr q0, [x0, #-48]                     // ...e..........'............~..........
        // sqrdmulh v6.8h,    v0.8h, v3.8h        // ..............'*......................
        // mul      v1.8h, v0.8h, v2.8h           // ..............'......*................
        // mls      v1.8h, v6.8h,    v4.h[0]      // ..~...........'...........*...........
        // str q1, [x0, #-48]                     // .......~......'................*......
        // ldr q0, [x0, #-32]                     // ...........e..'....................~..
        // sqrdmulh v6.8h,    v0.8h, v3.8h        // ..............'....*..................
        // mul      v1.8h, v0.8h, v2.8h           // ..............'........*..............
        // mls      v1.8h, v6.8h,    v4.h[0]      // .....~........'..............*........
        // str q1, [x0, #-32]                     // .............~'......................*
        // ldr q0, [x0, #-16]                     // e.............'.........~.............
        // sqrdmulh v6.8h,    v0.8h, v3.8h        // .........e....'..................~....
        // mul      v1.8h, v0.8h, v2.8h           // ........e.....'.................~.....
        // mls      v1.8h, v6.8h,    v4.h[0]      // ..............*.......................
        // str q1, [x0, #-16]                     // ..............'...*...................

        sub count, count, 1
        cbnz count, 1b
                                              // Instructions:    15
                                              // Expected cycles: 18
                                              // Expected IPC:    0.83
                                              //
                                              // Cycle bound:     18.0
                                              // IPC bound:       0.83
                                              //
                                              // Wall time:     0.07s
                                              // User time:     0.07s
                                              //
                                              // ----- cycle (expected) ------>
                                              // 0                        25
                                              // |------------------------|----
        mls v17.8H, v7.8H, v4.H[0]            // *.............................
        sqrdmulh v7.8H, v23.8H, v3.8H         // .*............................
        mul v26.8H, v23.8H, v2.8H             // ..*...........................
        sqrdmulh v25.8H, v27.8H, v3.8H        // ...*..........................
        ldr q23, [x0], #64                    // ....*.........................
        mul v27.8H, v27.8H, v2.8H             // ......*.......................
        mls v26.8H, v7.8H, v4.H[0]            // .......*......................
        sqrdmulh v7.8H, v23.8H, v3.8H         // ........*.....................
        mul v23.8H, v23.8H, v2.8H             // .........*....................
        str q17, [x0, #-16]                   // ..........*...................
        mls v27.8H, v25.8H, v4.H[0]           // ...........*..................
        str q26, [x0, #-48]                   // ............*.................
        mls v23.8H, v7.8H, v4.H[0]            // .............*................
        str q27, [x0, #-32]                   // ...............*..............
        str q23, [x0, #-64]                   // .................*............

                                               // ------ cycle (expected) ------>
                                               // 0                        25
                                               // |------------------------|-----
        // mls v17.8H, v7.8H, v4.H[0]          // *..............................
        // sqrdmulh v5.8H, v23.8H, v3.8H       // .*.............................
        // ldr q7, [x0], #64                   // ....*..........................
        // str q17, [x0, #-16]                 // ..........*....................
        // sqrdmulh v29.8H, v27.8H, v3.8H      // ...*...........................
        // sqrdmulh v19.8H, v7.8H, v3.8H       // ........*......................
        // mul v25.8H, v23.8H, v2.8H           // ..*............................
        // mul v0.8H, v7.8H, v2.8H             // .........*.....................
        // mul v26.8H, v27.8H, v2.8H           // ......*........................
        // mls v25.8H, v5.8H, v4.H[0]          // .......*.......................
        // mls v26.8H, v29.8H, v4.H[0]         // ...........*...................
        // mls v0.8H, v19.8H, v4.H[0]          // .............*.................
        // str q25, [x0, #-48]                 // ............*..................
        // str q0, [x0, #-64]                  // .................*.............
        // str q26, [x0, #-32]                 // ...............*...............


        ret

        .unreq src
        .unreq count
        .unreq wtmp

        .unreq data
        .unreq q_data
        .unreq res
        .unreq q_res

        .unreq factor
        .unreq factor_t
        .unreq modulus
        .unreq modulus_twisted

        .unreq tmp0

#endif /* MLKEM_NATIVE_ARITH_BACKEND_AARCH64_OPT */
