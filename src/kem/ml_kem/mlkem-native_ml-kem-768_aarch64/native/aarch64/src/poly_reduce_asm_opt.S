/*
 * Copyright (c) 2024 The mlkem-native project authors
 * SPDX-License-Identifier: Apache-2.0
 */

#include "../../../common.h"
#if defined(MLKEM_NATIVE_ARITH_BACKEND_AARCH64_OPT)
/* simpasm: header-end */

/* Barrett reduction */
.macro barrett_reduce a
        sqdmulh tmp.8h,   \a\().8h, modulus_twisted.h[0]
        srshr   tmp.8h,   tmp.8h,   #11
        mls     \a\().8h, tmp.8h,   modulus.h[0]
.endm

/* Turns signed-canonical to unsigned canonical representative
 * through conditional addition of the modulus.
 *
 * Expected modulus in `modulus`. */
.macro scalar_signed_to_unsigned a
        sshr mask.8h, \a\().8h, #15
        and mask.16b, modulus.16b, mask.16b
        add \a\().8h, \a\().8h, mask.8h
.endm

/**********************************
 *          poly_reduce()         *
 **********************************/

        ptr               .req x0
        count             .req x1
        wtmp              .req w2

        data              .req v0
        q_data            .req q0

        tmp               .req v1
        mask              .req v2
        modulus           .req v3
        modulus_twisted   .req v4

        .text
        .global MLKEM_ASM_NAMESPACE(poly_reduce_asm_opt)
        .balign 4
MLKEM_ASM_NAMESPACE(poly_reduce_asm_opt):

        mov wtmp, #3329 // ML-KEM modulus
        dup modulus.8h, wtmp

        mov wtmp, #20159 // Barrett twist of 1 wrt 2^27
        dup modulus_twisted.8h, wtmp

        mov count, #8
                                               // Instructions:    15
                                               // Expected cycles: 22
                                               // Expected IPC:    0.68

                                               // Cycle bound:     22.0
                                               // IPC bound:       0.68

                                               // Wall time:     0.05s
                                               // User time:     0.05s

                                               // ----- cycle (expected) ------>
                                               // 0                        25
                                               // |------------------------|----
        ldr q21, [x0, #32]                     // *.............................
        ldr q23, [x0, #48]                     // ..*...........................
        sqdmulh v7.8H, v21.8H, v4.H[0]         // ....*.........................
        sqdmulh v30.8H, v23.8H, v4.H[0]        // ......*.......................
        srshr v7.8H, v7.8H, #11                // ........*.....................
        srshr v30.8H, v30.8H, #11              // ..........*...................
        mls v21.8H, v7.8H, v3.H[0]             // ...........*..................
        mls v23.8H, v30.8H, v3.H[0]            // .............*................
        ldr q5, [x0, #16]                      // ..............*...............
        sshr v7.8H, v21.8H, #15                // ................*.............
        sshr v30.8H, v23.8H, #15               // .................*............
        and v7.16B, v3.16B, v7.16B             // ..................*...........
        add v21.8H, v21.8H, v7.8H              // ...................*..........
        and v7.16B, v3.16B, v30.16B            // ....................*.........
        add v16.8H, v23.8H, v7.8H              // .....................*........

                                                // ------ cycle (expected) ------>
                                                // 0                        25
                                                // |------------------------|-----
        // ldr q30, [x0, #32]                     // *..............................
        // sqdmulh v22.8H, v30.8H, v4.H[0]        // ....*..........................
        // ldr q2, [x0, #48]                      // ..*............................
        // srshr v19.8H, v22.8H, #11              // ........*......................
        // mls v30.8H, v19.8H, v3.H[0]            // ...........*...................
        // sqdmulh v25.8H, v2.8H, v4.H[0]         // ......*........................
        // sshr v31.8H, v30.8H, #15               // ................*..............
        // srshr v25.8H, v25.8H, #11              // ..........*....................
        // and v18.16B, v3.16B, v31.16B           // ..................*............
        // mls v2.8H, v25.8H, v3.H[0]             // .............*.................
        // add v21.8H, v30.8H, v18.8H             // ...................*...........
        // ldr q5, [x0, #16]                      // ..............*................
        // sshr v18.8H, v2.8H, #15                // .................*.............
        // and v27.16B, v3.16B, v18.16B           // ....................*..........
        // add v16.8H, v2.8H, v27.8H              // .....................*.........

        sub count, count, #1
poly_reduce_asm_opt_loop:
                                               // Instructions:    32
                                               // Expected cycles: 36
                                               // Expected IPC:    0.89

                                               // Cycle bound:     36.0
                                               // IPC bound:       0.89

                                               // Wall time:     1.05s
                                               // User time:     1.05s

                                               // -------- cycle (expected) --------->
                                               // 0                        25
                                               // |------------------------|----------
        ldr q6, [x0], #64                      // *...................................
        ldr q30, [x0, #32]                     // ..e.................................
        sqdmulh v31.8H, v6.8H, v4.H[0]         // ....*...............................
        sqdmulh v29.8H, v5.8H, v4.H[0]         // .....*..............................
        sqdmulh v22.8H, v30.8H, v4.H[0]        // ......e.............................
        str q16, [x0, #-16]                    // .......*............................
        srshr v20.8H, v31.8H, #11              // ........*...........................
        srshr v28.8H, v29.8H, #11              // .........*..........................
        str q21, [x0, #-32]                    // ..........*.........................
        mls v6.8H, v20.8H, v3.H[0]             // ...........*........................
        mls v5.8H, v28.8H, v3.H[0]             // ............*.......................
        ldr q2, [x0, #48]                      // .............e......................
        sshr v31.8H, v6.8H, #15                // ...............*....................
        srshr v19.8H, v22.8H, #11              // ................e...................
        and v22.16B, v3.16B, v31.16B           // .................*..................
        add v0.8H, v6.8H, v22.8H               // ..................*.................
        mls v30.8H, v19.8H, v3.H[0]            // ...................e................
        sshr v26.8H, v5.8H, #15                // ....................*...............
        sqdmulh v25.8H, v2.8H, v4.H[0]         // .....................e..............
        and v17.16B, v3.16B, v26.16B           // ......................*.............
        add v1.8H, v5.8H, v17.8H               // .......................*............
        sshr v31.8H, v30.8H, #15               // ........................e...........
        srshr v25.8H, v25.8H, #11              // .........................e..........
        str q1, [x0, #-48]                     // ..........................*.........
        and v18.16B, v3.16B, v31.16B           // ...........................e........
        mls v2.8H, v25.8H, v3.H[0]             // ............................e.......
        add v21.8H, v30.8H, v18.8H             // .............................e......
        ldr q5, [x0, #16]                      // ..............................e.....
        sshr v18.8H, v2.8H, #15                // ................................e...
        str q0, [x0, #-64]                     // .................................*..
        and v27.16B, v3.16B, v18.16B           // ..................................e.
        add v16.8H, v2.8H, v27.8H              // ...................................e

                                                // ------------------------ cycle (expected) ------------------------->
                                                // 0                        25                       50
                                                // |------------------------|------------------------|-----------------
        // ldr q0, [x0], #64                      // ..................................*.................................
        // sqdmulh v1.8h,   v0.8h, v4.h[0]        // ..~...............................'...*.............................
        // srshr   v1.8h,   v1.8h,   #11          // ......~...........................'.......*.........................
        // mls     v0.8h, v1.8h,   v3.h[0]        // .........~........................'..........*......................
        // sshr v2.8h, v0.8h, #15                 // .............~....................'..............*..................
        // and v2.16b, v3.16b, v2.16b             // ...............~..................'................*................
        // add v0.8h, v0.8h, v2.8h                // ................~.................'.................*...............
        // str q0, [x0, #-64]                     // ...............................~..'................................*
        // ldr q0, [x0, #-48]                     // ............................e.....'.............................~...
        // sqdmulh v1.8h,   v0.8h, v4.h[0]        // ...~..............................'....*............................
        // srshr   v1.8h,   v1.8h,   #11          // .......~..........................'........*........................
        // mls     v0.8h, v1.8h,   v3.h[0]        // ..........~.......................'...........*.....................
        // sshr v2.8h, v0.8h, #15                 // ..................~...............'...................*.............
        // and v2.16b, v3.16b, v2.16b             // ....................~.............'.....................*...........
        // add v0.8h, v0.8h, v2.8h                // .....................~............'......................*..........
        // str q0, [x0, #-48]                     // ........................~.........'.........................*.......
        // ldr q0, [x0, #-32]                     // e.................................'.~...............................
        // sqdmulh v1.8h,   v0.8h, v4.h[0]        // ....e.............................'.....~...........................
        // srshr   v1.8h,   v1.8h,   #11          // ..............e...................'...............~.................
        // mls     v0.8h, v1.8h,   v3.h[0]        // .................e................'..................~..............
        // sshr v2.8h, v0.8h, #15                 // ......................e...........'.......................~.........
        // and v2.16b, v3.16b, v2.16b             // .........................e........'..........................~......
        // add v0.8h, v0.8h, v2.8h                // ...........................e......'............................~....
        // str q0, [x0, #-32]                     // ........~.........................'.........*.......................
        // ldr q0, [x0, #-16]                     // ...........e......................'............~....................
        // sqdmulh v1.8h,   v0.8h, v4.h[0]        // ...................e..............'....................~............
        // srshr   v1.8h,   v1.8h,   #11          // .......................e..........'........................~........
        // mls     v0.8h, v1.8h,   v3.h[0]        // ..........................e.......'...........................~.....
        // sshr v2.8h, v0.8h, #15                 // ..............................e...'...............................~.
        // and v2.16b, v3.16b, v2.16b             // ................................e.'.................................
        // add v0.8h, v0.8h, v2.8h                // .................................e'.................................
        // str q0, [x0, #-16]                     // .....~............................'......*..........................

        sub count, count, 1
        cbnz count, poly_reduce_asm_opt_loop
                                               // Instructions:    17
                                               // Expected cycles: 23
                                               // Expected IPC:    0.74

                                               // Cycle bound:     23.0
                                               // IPC bound:       0.74

                                               // Wall time:     0.05s
                                               // User time:     0.05s

                                               // ----- cycle (expected) ------>
                                               // 0                        25
                                               // |------------------------|----
        sqdmulh v20.8H, v5.8H, v4.H[0]         // *.............................
        ldr q24, [x0], #64                     // .*............................
        str q21, [x0, #-32]                    // ...*..........................
        srshr v20.8H, v20.8H, #11              // ....*.........................
        sqdmulh v25.8H, v24.8H, v4.H[0]        // .....*........................
        str q16, [x0, #-16]                    // ......*.......................
        mls v5.8H, v20.8H, v3.H[0]             // .......*......................
        srshr v20.8H, v25.8H, #11              // .........*....................
        sshr v2.8H, v5.8H, #15                 // ...........*..................
        mls v24.8H, v20.8H, v3.H[0]            // ............*.................
        and v20.16B, v3.16B, v2.16B            // .............*................
        add v31.8H, v5.8H, v20.8H              // ..............*...............
        sshr v20.8H, v24.8H, #15               // ................*.............
        str q31, [x0, #-48]                    // .................*............
        and v31.16B, v3.16B, v20.16B           // ..................*...........
        add v24.8H, v24.8H, v31.8H             // ...................*..........
        str q24, [x0, #-64]                    // ......................*.......

                                               // ------ cycle (expected) ------>
                                               // 0                        25
                                               // |------------------------|-----
        // ldr q6, [x0], #64                     // .*.............................
        // sqdmulh v31.8H, v6.8H, v4.H[0]        // .....*.........................
        // sqdmulh v29.8H, v5.8H, v4.H[0]        // *..............................
        // str q16, [x0, #-16]                   // ......*........................
        // srshr v20.8H, v31.8H, #11             // .........*.....................
        // srshr v28.8H, v29.8H, #11             // ....*..........................
        // str q21, [x0, #-32]                   // ...*...........................
        // mls v6.8H, v20.8H, v3.H[0]            // ............*..................
        // mls v5.8H, v28.8H, v3.H[0]            // .......*.......................
        // sshr v31.8H, v6.8H, #15               // ................*..............
        // and v22.16B, v3.16B, v31.16B          // ..................*............
        // add v0.8H, v6.8H, v22.8H              // ...................*...........
        // sshr v26.8H, v5.8H, #15               // ...........*...................
        // and v17.16B, v3.16B, v26.16B          // .............*.................
        // add v1.8H, v5.8H, v17.8H              // ..............*................
        // str q1, [x0, #-48]                    // .................*.............
        // str q0, [x0, #-64]                    // ......................*........


        ret

        .unreq ptr
        .unreq count
        .unreq wtmp

        .unreq data
        .unreq q_data

        .unreq tmp
        .unreq mask
        .unreq modulus
        .unreq modulus_twisted

/* simpasm: footer-start */
#endif /* MLKEM_NATIVE_ARITH_BACKEND_AARCH64_OPT */
