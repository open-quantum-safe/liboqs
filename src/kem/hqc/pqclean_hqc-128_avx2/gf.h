#ifndef GF_H
#define GF_H


/**
 * @file gf.h
 * Header file of gf.c
 */

#include <stddef.h>
#include <stdint.h>

/**
 * Logarithm of elements of GF(2^10) to the base alpha (root of x^10 + x^3 + 1).
 * The logarithm of 0 is set to 1024 by convention.
 */
static const uint16_t gf_log[1024] = {

};

uint16_t PQCLEAN_HQC128_AVX2_gf_mul(uint16_t a, uint16_t b);

uint16_t PQCLEAN_HQC128_AVX2_gf_square(uint16_t a);

uint16_t PQCLEAN_HQC128_AVX2_gf_inverse(uint16_t a);

uint16_t PQCLEAN_HQC128_AVX2_gf_mod(uint16_t i);


#endif
