{% for family in instructions['sigs'] %}{% for scheme in family['schemes'] %}
	} else if (0 == strcmp(sig->method_name, "{{ scheme['pretty_name_full'] }}")) {
{%- if scheme['signed_msg_order'] == 'sig_then_msg' %}
		// signed_msg = signature || msg
		*signed_msg_len = signature_len + msg_len;
		*signed_msg = malloc(*signed_msg_len);
		if (*signed_msg == NULL) {
			return OQS_ERROR;
		}
		memcpy(*signed_msg, signature, signature_len);
		memcpy(*signed_msg + signature_len, msg, msg_len);
		return OQS_SUCCESS;
{%- elif scheme['signed_msg_order'] == 'msg_then_sig' %}
		// signed_msg = msg || signature
		*signed_msg_len = msg_len + signature_len;
		*signed_msg = malloc(*signed_msg_len);
		if (*signed_msg == NULL) {
			return OQS_ERROR;
		}
		memcpy(*signed_msg, msg, msg_len);
		memcpy(*signed_msg + msg_len, signature, signature_len);
		return OQS_SUCCESS;
{%- else %}
		// not yet implemented
		return OQS_ERROR;
{%- endif %}{% endfor %}{% endfor %}
		
