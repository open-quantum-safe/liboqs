diff --git b/crypto_sign/dilithium2/aarch64/__asm_NTT.S a/crypto_sign/dilithium2/aarch64/__asm_NTT.S
index b244cabc..946c3c3c 100644
--- b/crypto_sign/dilithium2/aarch64/__asm_NTT.S
+++ a/crypto_sign/dilithium2/aarch64/__asm_NTT.S
@@ -28,10 +28,10 @@
 #include "macros.inc"
 
 .align 2
-.global PQCLEAN_dilithium2_AARCH64__asm_ntt_SIMD_top
-.global _PQCLEAN_dilithium2_AARCH64__asm_ntt_SIMD_top
-PQCLEAN_dilithium2_AARCH64__asm_ntt_SIMD_top:
-_PQCLEAN_dilithium2_AARCH64__asm_ntt_SIMD_top:
+.global PQCLEAN_DILITHIUM2_AARCH64__asm_ntt_SIMD_top
+.global _PQCLEAN_DILITHIUM2_AARCH64__asm_ntt_SIMD_top
+PQCLEAN_DILITHIUM2_AARCH64__asm_ntt_SIMD_top:
+_PQCLEAN_DILITHIUM2_AARCH64__asm_ntt_SIMD_top:
 
     push_all
     Q         .req w20
@@ -206,10 +206,10 @@ _PQCLEAN_dilithium2_AARCH64__asm_ntt_SIMD_top:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium2_AARCH64__asm_ntt_SIMD_bot
-.global _PQCLEAN_dilithium2_AARCH64__asm_ntt_SIMD_bot
-PQCLEAN_dilithium2_AARCH64__asm_ntt_SIMD_bot:
-_PQCLEAN_dilithium2_AARCH64__asm_ntt_SIMD_bot:
+.global PQCLEAN_DILITHIUM2_AARCH64__asm_ntt_SIMD_bot
+.global _PQCLEAN_DILITHIUM2_AARCH64__asm_ntt_SIMD_bot
+PQCLEAN_DILITHIUM2_AARCH64__asm_ntt_SIMD_bot:
+_PQCLEAN_DILITHIUM2_AARCH64__asm_ntt_SIMD_bot:
 
     push_all
     Q         .req w20
diff --git b/crypto_sign/dilithium2/aarch64/__asm_iNTT.S a/crypto_sign/dilithium2/aarch64/__asm_iNTT.S
index f28bb313..56a5b7ae 100644
--- b/crypto_sign/dilithium2/aarch64/__asm_iNTT.S
+++ a/crypto_sign/dilithium2/aarch64/__asm_iNTT.S
@@ -28,10 +28,10 @@
 #include "macros.inc"
 
 .align 2
-.global PQCLEAN_dilithium2_AARCH64__asm_intt_SIMD_top
-.global _PQCLEAN_dilithium2_AARCH64__asm_intt_SIMD_top
-PQCLEAN_dilithium2_AARCH64__asm_intt_SIMD_top:
-_PQCLEAN_dilithium2_AARCH64__asm_intt_SIMD_top:
+.global PQCLEAN_DILITHIUM2_AARCH64__asm_intt_SIMD_top
+.global _PQCLEAN_DILITHIUM2_AARCH64__asm_intt_SIMD_top
+PQCLEAN_DILITHIUM2_AARCH64__asm_intt_SIMD_top:
+_PQCLEAN_DILITHIUM2_AARCH64__asm_intt_SIMD_top:
 
     push_all
     Q         .req w20
@@ -435,10 +435,10 @@ _PQCLEAN_dilithium2_AARCH64__asm_intt_SIMD_top:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium2_AARCH64__asm_intt_SIMD_bot
-.global _PQCLEAN_dilithium2_AARCH64__asm_intt_SIMD_bot
-PQCLEAN_dilithium2_AARCH64__asm_intt_SIMD_bot:
-_PQCLEAN_dilithium2_AARCH64__asm_intt_SIMD_bot:
+.global PQCLEAN_DILITHIUM2_AARCH64__asm_intt_SIMD_bot
+.global _PQCLEAN_DILITHIUM2_AARCH64__asm_intt_SIMD_bot
+PQCLEAN_DILITHIUM2_AARCH64__asm_intt_SIMD_bot:
+_PQCLEAN_DILITHIUM2_AARCH64__asm_intt_SIMD_bot:
 
     push_all
     Q         .req w20
diff --git b/crypto_sign/dilithium2/aarch64/__asm_poly.S a/crypto_sign/dilithium2/aarch64/__asm_poly.S
index 63295ca0..e7fe8388 100644
--- b/crypto_sign/dilithium2/aarch64/__asm_poly.S
+++ a/crypto_sign/dilithium2/aarch64/__asm_poly.S
@@ -29,10 +29,10 @@
 #include "params.h"
 
 .align 2
-.global PQCLEAN_dilithium2_AARCH64__asm_10_to_32
-.global _PQCLEAN_dilithium2_AARCH64__asm_10_to_32
-PQCLEAN_dilithium2_AARCH64__asm_10_to_32:
-_PQCLEAN_dilithium2_AARCH64__asm_10_to_32:
+.global PQCLEAN_DILITHIUM2_AARCH64__asm_10_to_32
+.global _PQCLEAN_DILITHIUM2_AARCH64__asm_10_to_32
+PQCLEAN_DILITHIUM2_AARCH64__asm_10_to_32:
+_PQCLEAN_DILITHIUM2_AARCH64__asm_10_to_32:
 
     mov x7, #16
     _10_to_32_loop:
@@ -102,10 +102,10 @@ _PQCLEAN_dilithium2_AARCH64__asm_10_to_32:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium2_AARCH64__asm_poly_reduce
-.global _PQCLEAN_dilithium2_AARCH64__asm_poly_reduce
-PQCLEAN_dilithium2_AARCH64__asm_poly_reduce:
-_PQCLEAN_dilithium2_AARCH64__asm_poly_reduce:
+.global PQCLEAN_DILITHIUM2_AARCH64__asm_poly_reduce
+.global _PQCLEAN_DILITHIUM2_AARCH64__asm_poly_reduce
+PQCLEAN_DILITHIUM2_AARCH64__asm_poly_reduce:
+_PQCLEAN_DILITHIUM2_AARCH64__asm_poly_reduce:
 
     ldr w4, [x1]
 
@@ -195,10 +195,10 @@ _PQCLEAN_dilithium2_AARCH64__asm_poly_reduce:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium2_AARCH64__asm_poly_caddq
-.global _PQCLEAN_dilithium2_AARCH64__asm_poly_caddq
-PQCLEAN_dilithium2_AARCH64__asm_poly_caddq:
-_PQCLEAN_dilithium2_AARCH64__asm_poly_caddq:
+.global PQCLEAN_DILITHIUM2_AARCH64__asm_poly_caddq
+.global _PQCLEAN_DILITHIUM2_AARCH64__asm_poly_caddq
+PQCLEAN_DILITHIUM2_AARCH64__asm_poly_caddq:
+_PQCLEAN_DILITHIUM2_AARCH64__asm_poly_caddq:
 
     ldr w4, [x1]
 
@@ -288,10 +288,10 @@ _PQCLEAN_dilithium2_AARCH64__asm_poly_caddq:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium2_AARCH64__asm_poly_freeze
-.global _PQCLEAN_dilithium2_AARCH64__asm_poly_freeze
-PQCLEAN_dilithium2_AARCH64__asm_poly_freeze:
-_PQCLEAN_dilithium2_AARCH64__asm_poly_freeze:
+.global PQCLEAN_DILITHIUM2_AARCH64__asm_poly_freeze
+.global _PQCLEAN_DILITHIUM2_AARCH64__asm_poly_freeze
+PQCLEAN_DILITHIUM2_AARCH64__asm_poly_freeze:
+_PQCLEAN_DILITHIUM2_AARCH64__asm_poly_freeze:
 
     ldr w4, [x1]
 
@@ -417,10 +417,10 @@ _PQCLEAN_dilithium2_AARCH64__asm_poly_freeze:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium2_AARCH64__asm_poly_power2round
-.global _PQCLEAN_dilithium2_AARCH64__asm_poly_power2round
-PQCLEAN_dilithium2_AARCH64__asm_poly_power2round:
-_PQCLEAN_dilithium2_AARCH64__asm_poly_power2round:
+.global PQCLEAN_DILITHIUM2_AARCH64__asm_poly_power2round
+.global _PQCLEAN_DILITHIUM2_AARCH64__asm_poly_power2round
+PQCLEAN_DILITHIUM2_AARCH64__asm_poly_power2round:
+_PQCLEAN_DILITHIUM2_AARCH64__asm_poly_power2round:
 
     mov w4, #1
 
@@ -563,10 +563,10 @@ _PQCLEAN_dilithium2_AARCH64__asm_poly_power2round:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium2_AARCH64__asm_poly_add
-.global _PQCLEAN_dilithium2_AARCH64__asm_poly_add
-PQCLEAN_dilithium2_AARCH64__asm_poly_add:
-_PQCLEAN_dilithium2_AARCH64__asm_poly_add:
+.global PQCLEAN_DILITHIUM2_AARCH64__asm_poly_add
+.global _PQCLEAN_DILITHIUM2_AARCH64__asm_poly_add
+PQCLEAN_DILITHIUM2_AARCH64__asm_poly_add:
+_PQCLEAN_DILITHIUM2_AARCH64__asm_poly_add:
 
     ld1 {v0.4S}, [x1], #16
     ld1 {v4.4S}, [x2], #16
@@ -612,10 +612,10 @@ _PQCLEAN_dilithium2_AARCH64__asm_poly_add:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium2_AARCH64__asm_poly_sub
-.global _PQCLEAN_dilithium2_AARCH64__asm_poly_sub
-PQCLEAN_dilithium2_AARCH64__asm_poly_sub:
-_PQCLEAN_dilithium2_AARCH64__asm_poly_sub:
+.global PQCLEAN_DILITHIUM2_AARCH64__asm_poly_sub
+.global _PQCLEAN_DILITHIUM2_AARCH64__asm_poly_sub
+PQCLEAN_DILITHIUM2_AARCH64__asm_poly_sub:
+_PQCLEAN_DILITHIUM2_AARCH64__asm_poly_sub:
 
     ld1 {v0.4S}, [x1], #16
     ld1 {v4.4S}, [x2], #16
@@ -661,10 +661,10 @@ _PQCLEAN_dilithium2_AARCH64__asm_poly_sub:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium2_AARCH64__asm_poly_shiftl
-.global _PQCLEAN_dilithium2_AARCH64__asm_poly_shiftl
-PQCLEAN_dilithium2_AARCH64__asm_poly_shiftl:
-_PQCLEAN_dilithium2_AARCH64__asm_poly_shiftl:
+.global PQCLEAN_DILITHIUM2_AARCH64__asm_poly_shiftl
+.global _PQCLEAN_DILITHIUM2_AARCH64__asm_poly_shiftl
+PQCLEAN_DILITHIUM2_AARCH64__asm_poly_shiftl:
+_PQCLEAN_DILITHIUM2_AARCH64__asm_poly_shiftl:
 
     add x1, x0, #0
 
@@ -728,10 +728,10 @@ _PQCLEAN_dilithium2_AARCH64__asm_poly_shiftl:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium2_AARCH64__asm_poly_pointwise_montgomery
-.global _PQCLEAN_dilithium2_AARCH64__asm_poly_pointwise_montgomery
-PQCLEAN_dilithium2_AARCH64__asm_poly_pointwise_montgomery:
-_PQCLEAN_dilithium2_AARCH64__asm_poly_pointwise_montgomery:
+.global PQCLEAN_DILITHIUM2_AARCH64__asm_poly_pointwise_montgomery
+.global _PQCLEAN_DILITHIUM2_AARCH64__asm_poly_pointwise_montgomery
+PQCLEAN_DILITHIUM2_AARCH64__asm_poly_pointwise_montgomery:
+_PQCLEAN_DILITHIUM2_AARCH64__asm_poly_pointwise_montgomery:
 
     push_all
 
@@ -847,10 +847,10 @@ _PQCLEAN_dilithium2_AARCH64__asm_poly_pointwise_montgomery:
 
 
 .align 2
-.global PQCLEAN_dilithium2_AARCH64__asm_polyvecl_pointwise_acc_montgomery
-.global _PQCLEAN_dilithium2_AARCH64__asm_polyvecl_pointwise_acc_montgomery
-PQCLEAN_dilithium2_AARCH64__asm_polyvecl_pointwise_acc_montgomery:
-_PQCLEAN_dilithium2_AARCH64__asm_polyvecl_pointwise_acc_montgomery:
+.global PQCLEAN_DILITHIUM2_AARCH64__asm_polyvecl_pointwise_acc_montgomery
+.global _PQCLEAN_DILITHIUM2_AARCH64__asm_polyvecl_pointwise_acc_montgomery
+PQCLEAN_DILITHIUM2_AARCH64__asm_polyvecl_pointwise_acc_montgomery:
+_PQCLEAN_DILITHIUM2_AARCH64__asm_polyvecl_pointwise_acc_montgomery:
 
     push_all
 
diff --git b/crypto_sign/dilithium2/aarch64/api.h a/crypto_sign/dilithium2/aarch64/api.h
index 3f7b3cb0..2ce42599 100644
--- b/crypto_sign/dilithium2/aarch64/api.h
+++ a/crypto_sign/dilithium2/aarch64/api.h
@@ -5,33 +5,33 @@
  * or public domain at https://github.com/pq-crystals/dilithium
  */
 
-#ifndef PQCLEAN_dilithium2_AARCH64_API_H
-#define PQCLEAN_dilithium2_AARCH64_API_H
+#ifndef PQCLEAN_DILITHIUM2_AARCH64_API_H
+#define PQCLEAN_DILITHIUM2_AARCH64_API_H
 
 
 #include <stddef.h>
 #include <stdint.h>
 
-#define PQCLEAN_dilithium2_AARCH64_CRYPTO_PUBLICKEYBYTES 1312
-#define PQCLEAN_dilithium2_AARCH64_CRYPTO_SECRETKEYBYTES 2528
-#define PQCLEAN_dilithium2_AARCH64_CRYPTO_BYTES 2420
-#define PQCLEAN_dilithium2_AARCH64_CRYPTO_ALGNAME "Dilithium2"
+#define PQCLEAN_DILITHIUM2_AARCH64_CRYPTO_PUBLICKEYBYTES 1312
+#define PQCLEAN_DILITHIUM2_AARCH64_CRYPTO_SECRETKEYBYTES 2528
+#define PQCLEAN_DILITHIUM2_AARCH64_CRYPTO_BYTES 2420
+#define PQCLEAN_DILITHIUM2_AARCH64_CRYPTO_ALGNAME "Dilithium2"
 
-int PQCLEAN_dilithium2_AARCH64_crypto_sign_keypair(uint8_t *pk, uint8_t *sk);
+int PQCLEAN_DILITHIUM2_AARCH64_crypto_sign_keypair(uint8_t *pk, uint8_t *sk);
 
-int PQCLEAN_dilithium2_AARCH64_crypto_sign_signature(
+int PQCLEAN_DILITHIUM2_AARCH64_crypto_sign_signature(
     uint8_t *sig, size_t *siglen,
     const uint8_t *m, size_t mlen, const uint8_t *sk);
 
-int PQCLEAN_dilithium2_AARCH64_crypto_sign_verify(
+int PQCLEAN_DILITHIUM2_AARCH64_crypto_sign_verify(
     const uint8_t *sig, size_t siglen,
     const uint8_t *m, size_t mlen, const uint8_t *pk);
 
-int PQCLEAN_dilithium2_AARCH64_crypto_sign(
+int PQCLEAN_DILITHIUM2_AARCH64_crypto_sign(
     uint8_t *sm, size_t *smlen,
     const uint8_t *m, size_t mlen, const uint8_t *sk);
 
-int PQCLEAN_dilithium2_AARCH64_crypto_sign_open(
+int PQCLEAN_DILITHIUM2_AARCH64_crypto_sign_open(
     uint8_t *m, size_t *mlen,
     const uint8_t *sm, size_t smlen, const uint8_t *pk);
 
diff --git b/crypto_sign/dilithium2/aarch64/feat.S a/crypto_sign/dilithium2/aarch64/feat.S
index a7f9a2e2..63be5df6 100644
--- b/crypto_sign/dilithium2/aarch64/feat.S
+++ a/crypto_sign/dilithium2/aarch64/feat.S
@@ -123,10 +123,10 @@ SOFTWARE.
 .endm
 
 .align 4
-.global PQCLEAN_dilithium2_AARCH64_f1600x2
-.global _PQCLEAN_dilithium2_AARCH64_f1600x2
-PQCLEAN_dilithium2_AARCH64_f1600x2:
-_PQCLEAN_dilithium2_AARCH64_f1600x2:
+.global PQCLEAN_DILITHIUM2_AARCH64_f1600x2
+.global _PQCLEAN_DILITHIUM2_AARCH64_f1600x2
+PQCLEAN_DILITHIUM2_AARCH64_f1600x2:
+_PQCLEAN_DILITHIUM2_AARCH64_f1600x2:
     stp d8,  d9,  [sp,#-16]!
     stp d10, d11, [sp,#-16]!
     stp d12, d13, [sp,#-16]!
diff --git b/crypto_sign/dilithium2/aarch64/fips202x2.c a/crypto_sign/dilithium2/aarch64/fips202x2.c
index 446a91cc..f2faa493 100644
--- b/crypto_sign/dilithium2/aarch64/fips202x2.c
+++ a/crypto_sign/dilithium2/aarch64/fips202x2.c
@@ -101,12 +101,12 @@ static const uint64_t neon_KeccakF_RoundConstants[NROUNDS] = {
 *
 * Arguments:   - uint64_t *state: pointer to input/output Keccak state
 **************************************************/
-extern void PQCLEAN_dilithium2_AARCH64_f1600x2(v128*, const uint64_t*);
+extern void PQCLEAN_DILITHIUM2_AARCH64_f1600x2(v128*, const uint64_t*);
 static inline
 void KeccakF1600_StatePermutex2(v128 state[25])
 {
 #if (__APPLE__ && __ARM_FEATURE_CRYPTO) || (__ARM_FEATURE_SHA3) /* although not sure what is being implemented, we find something fast */
-  PQCLEAN_dilithium2_AARCH64_f1600x2(state, neon_KeccakF_RoundConstants);
+  PQCLEAN_DILITHIUM2_AARCH64_f1600x2(state, neon_KeccakF_RoundConstants);
 #else
   v128 Aba, Abe, Abi, Abo, Abu;
   v128 Aga, Age, Agi, Ago, Agu;
diff --git b/crypto_sign/dilithium2/aarch64/ntt.h a/crypto_sign/dilithium2/aarch64/ntt.h
index 60a07094..5543e95d 100644
--- b/crypto_sign/dilithium2/aarch64/ntt.h
+++ a/crypto_sign/dilithium2/aarch64/ntt.h
@@ -36,20 +36,20 @@
 #include "params.h"
 #include <stdint.h>
 
-extern void PQCLEAN_dilithium2_AARCH64_asm_ntt_SIMD_top(int *des, const int *table, const int *_constants);
-extern void PQCLEAN_dilithium2_AARCH64_asm_ntt_SIMD_bot(int *des, const int *table, const int *_constants);
+extern void PQCLEAN_DILITHIUM2_AARCH64__asm_ntt_SIMD_top(int *des, const int *table, const int *_constants);
+extern void PQCLEAN_DILITHIUM2_AARCH64__asm_ntt_SIMD_bot(int *des, const int *table, const int *_constants);
 
-extern void PQCLEAN_dilithium2_AARCH64_asm_intt_SIMD_top(int *des, const int *table, const int *_constants);
-extern void PQCLEAN_dilithium2_AARCH64_asm_intt_SIMD_bot(int *des, const int *table, const int *_constants);
+extern void PQCLEAN_DILITHIUM2_AARCH64__asm_intt_SIMD_top(int *des, const int *table, const int *_constants);
+extern void PQCLEAN_DILITHIUM2_AARCH64__asm_intt_SIMD_bot(int *des, const int *table, const int *_constants);
 
 #define NTT(in) { \
-        PQCLEAN_dilithium2_AARCH64_asm_ntt_SIMD_top(in, streamlined_CT_negacyclic_table_Q1_extended, constants); \
-        PQCLEAN_dilithium2_AARCH64_asm_ntt_SIMD_bot(in, streamlined_CT_negacyclic_table_Q1_extended, constants); \
+        PQCLEAN_DILITHIUM2_AARCH64__asm_ntt_SIMD_top(in, streamlined_CT_negacyclic_table_Q1_extended, constants); \
+        PQCLEAN_DILITHIUM2_AARCH64__asm_ntt_SIMD_bot(in, streamlined_CT_negacyclic_table_Q1_extended, constants); \
     }
 
 #define iNTT(in) { \
-        PQCLEAN_dilithium2_AARCH64_asm_intt_SIMD_bot(in, streamlined_inv_CT_table_Q1_extended, constants); \
-        PQCLEAN_dilithium2_AARCH64_asm_intt_SIMD_top(in, streamlined_inv_CT_table_Q1_extended, constants); \
+        PQCLEAN_DILITHIUM2_AARCH64__asm_intt_SIMD_bot(in, streamlined_inv_CT_table_Q1_extended, constants); \
+        PQCLEAN_DILITHIUM2_AARCH64__asm_intt_SIMD_top(in, streamlined_inv_CT_table_Q1_extended, constants); \
     }
 
 #define ntt DILITHIUM_NAMESPACE(ntt)
diff --git b/crypto_sign/dilithium2/aarch64/params.h a/crypto_sign/dilithium2/aarch64/params.h
index c425b400..2f121ab4 100644
--- b/crypto_sign/dilithium2/aarch64/params.h
+++ a/crypto_sign/dilithium2/aarch64/params.h
@@ -12,8 +12,8 @@
 //#define DILITHIUM_MODE 3
 //#define DILITHIUM_MODE 5
 
-#define CRYPTO_NAMESPACETOP PQCLEAN_dilithium2_AARCH64_crypto_sign
-#define CRYPTO_NAMESPACE(s) PQCLEAN_dilithium2_AARCH64_##s
+#define CRYPTO_NAMESPACETOP PQCLEAN_DILITHIUM2_AARCH64_crypto_sign
+#define CRYPTO_NAMESPACE(s) PQCLEAN_DILITHIUM2_AARCH64_##s
 #define DILITHIUM_NAMESPACETOP CRYPTO_NAMESPACETOP
 #define DILITHIUM_NAMESPACE(s) CRYPTO_NAMESPACE(s)
 
diff --git b/crypto_sign/dilithium2/aarch64/poly.c a/crypto_sign/dilithium2/aarch64/poly.c
index 838dfe63..f6f303a4 100644
--- b/crypto_sign/dilithium2/aarch64/poly.c
+++ a/crypto_sign/dilithium2/aarch64/poly.c
@@ -57,11 +57,11 @@ static const int32_t montgomery_const[4] = {
 *
 * Arguments:   - poly *a: pointer to input/output polynomial
 **************************************************/
-extern void PQCLEAN_dilithium2_AARCH64_asm_poly_reduce(int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM2_AARCH64__asm_poly_reduce(int32_t *, const int32_t *);
 void poly_reduce(poly *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium2_AARCH64_asm_poly_reduce(a->coeffs, montgomery_const);
+    PQCLEAN_DILITHIUM2_AARCH64__asm_poly_reduce(a->coeffs, montgomery_const);
 
     DBENCH_STOP(*tred);
 }
@@ -74,11 +74,11 @@ void poly_reduce(poly *a) {
 *
 * Arguments:   - poly *a: pointer to input/output polynomial
 **************************************************/
-extern void PQCLEAN_dilithium2_AARCH64_asm_poly_caddq(int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM2_AARCH64__asm_poly_caddq(int32_t *, const int32_t *);
 void poly_caddq(poly *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium2_AARCH64_asm_poly_caddq(a->coeffs, montgomery_const);
+    PQCLEAN_DILITHIUM2_AARCH64__asm_poly_caddq(a->coeffs, montgomery_const);
 
     DBENCH_STOP(*tred);
 }
@@ -91,11 +91,11 @@ void poly_caddq(poly *a) {
 *
 * Arguments:   - poly *a: pointer to input/output polynomial
 **************************************************/
-extern void PQCLEAN_dilithium2_AARCH64_asm_poly_freeze(int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM2_AARCH64__asm_poly_freeze(int32_t *, const int32_t *);
 void poly_freeze(poly *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium2_AARCH64_asm_poly_freeze(a->coeffs, montgomery_const);
+    PQCLEAN_DILITHIUM2_AARCH64__asm_poly_freeze(a->coeffs, montgomery_const);
 
     DBENCH_STOP(*tred);
 }
@@ -205,11 +205,11 @@ void poly_invntt_tomont(poly *a) {
 *              - const poly *a: pointer to first input polynomial
 *              - const poly *b: pointer to second input polynomial
 **************************************************/
-extern void PQCLEAN_dilithium2_AARCH64_asm_poly_pointwise_montgomery(int32_t *des, const int32_t *src1, const int32_t *src2, const int32_t *table);
+extern void PQCLEAN_DILITHIUM2_AARCH64__asm_poly_pointwise_montgomery(int32_t *des, const int32_t *src1, const int32_t *src2, const int32_t *table);
 void poly_pointwise_montgomery(poly *c, const poly *a, const poly *b) {
     DBENCH_START();
 
-    PQCLEAN_dilithium2_AARCH64_asm_poly_pointwise_montgomery(c->coeffs, a->coeffs, b->coeffs, montgomery_const);
+    PQCLEAN_DILITHIUM2_AARCH64__asm_poly_pointwise_montgomery(c->coeffs, a->coeffs, b->coeffs, montgomery_const);
 
     DBENCH_STOP(*tmul);
 }
@@ -226,11 +226,11 @@ void poly_pointwise_montgomery(poly *c, const poly *a, const poly *b) {
 *              - poly *a0: pointer to output polynomial with coefficients c0
 *              - const poly *a: pointer to input polynomial
 **************************************************/
-extern void PQCLEAN_dilithium2_AARCH64_asm_poly_power2round(int32_t *, int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM2_AARCH64__asm_poly_power2round(int32_t *, int32_t *, const int32_t *);
 void poly_power2round(poly *a1, poly *a0, const poly *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium2_AARCH64_asm_poly_power2round(a1->coeffs, a0->coeffs, a->coeffs);
+    PQCLEAN_DILITHIUM2_AARCH64__asm_poly_power2round(a1->coeffs, a0->coeffs, a->coeffs);
 
     DBENCH_STOP(*tround);
 }
@@ -738,11 +738,11 @@ void polyt1_pack(uint8_t *r, const poly *a) {
 * Arguments:   - poly *r: pointer to output polynomial
 *              - const uint8_t *a: byte array with bit-packed polynomial
 **************************************************/
-extern void PQCLEAN_dilithium2_AARCH64_asm_10_to_32(int32_t *, const uint8_t *);
+extern void PQCLEAN_DILITHIUM2_AARCH64__asm_10_to_32(int32_t *, const uint8_t *);
 void polyt1_unpack(poly *r, const uint8_t *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium2_AARCH64_asm_10_to_32(r->coeffs, a);
+    PQCLEAN_DILITHIUM2_AARCH64__asm_10_to_32(r->coeffs, a);
 
     DBENCH_STOP(*tpack);
 }
diff --git b/crypto_sign/dilithium2/aarch64/polyvec.c a/crypto_sign/dilithium2/aarch64/polyvec.c
index 12c9f2df..83fb05ef 100644
--- b/crypto_sign/dilithium2/aarch64/polyvec.c
+++ a/crypto_sign/dilithium2/aarch64/polyvec.c
@@ -178,11 +178,11 @@ void polyvecl_pointwise_poly_montgomery(polyvecl *r, const poly *a, const polyve
 *              - const polyvecl *u: pointer to first input vector
 *              - const polyvecl *v: pointer to second input vector
 **************************************************/
-extern void PQCLEAN_dilithium2_AARCH64_asm_polyvecl_pointwise_acc_montgomery(int32_t *, const int32_t *, const int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM2_AARCH64__asm_polyvecl_pointwise_acc_montgomery(int32_t *, const int32_t *, const int32_t *, const int32_t *);
 void polyvecl_pointwise_acc_montgomery(poly *w,
                                        const polyvecl *u,
                                        const polyvecl *v) {
-    PQCLEAN_dilithium2_AARCH64_asm_polyvecl_pointwise_acc_montgomery(w->coeffs, u->vec[0].coeffs, v->vec[0].coeffs, l_montgomery_const);
+    PQCLEAN_DILITHIUM2_AARCH64__asm_polyvecl_pointwise_acc_montgomery(w->coeffs, u->vec[0].coeffs, v->vec[0].coeffs, l_montgomery_const);
 }
 
 /*************************************************
diff --git b/crypto_sign/dilithium3/aarch64/__asm_NTT.S a/crypto_sign/dilithium3/aarch64/__asm_NTT.S
index 8704d272..96d96515 100644
--- b/crypto_sign/dilithium3/aarch64/__asm_NTT.S
+++ a/crypto_sign/dilithium3/aarch64/__asm_NTT.S
@@ -28,10 +28,10 @@
 #include "macros.inc"
 
 .align 2
-.global PQCLEAN_dilithium3_AARCH64__asm_ntt_SIMD_top
-.global _PQCLEAN_dilithium3_AARCH64__asm_ntt_SIMD_top
-PQCLEAN_dilithium3_AARCH64__asm_ntt_SIMD_top:
-_PQCLEAN_dilithium3_AARCH64__asm_ntt_SIMD_top:
+.global PQCLEAN_DILITHIUM3_AARCH64__asm_ntt_SIMD_top
+.global _PQCLEAN_DILITHIUM3_AARCH64__asm_ntt_SIMD_top
+PQCLEAN_DILITHIUM3_AARCH64__asm_ntt_SIMD_top:
+_PQCLEAN_DILITHIUM3_AARCH64__asm_ntt_SIMD_top:
 
     push_all
     Q         .req w20
@@ -206,10 +206,10 @@ _PQCLEAN_dilithium3_AARCH64__asm_ntt_SIMD_top:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium3_AARCH64__asm_ntt_SIMD_bot
-.global _PQCLEAN_dilithium3_AARCH64__asm_ntt_SIMD_bot
-PQCLEAN_dilithium3_AARCH64__asm_ntt_SIMD_bot:
-_PQCLEAN_dilithium3_AARCH64__asm_ntt_SIMD_bot:
+.global PQCLEAN_DILITHIUM3_AARCH64__asm_ntt_SIMD_bot
+.global _PQCLEAN_DILITHIUM3_AARCH64__asm_ntt_SIMD_bot
+PQCLEAN_DILITHIUM3_AARCH64__asm_ntt_SIMD_bot:
+_PQCLEAN_DILITHIUM3_AARCH64__asm_ntt_SIMD_bot:
 
     push_all
     Q         .req w20
diff --git b/crypto_sign/dilithium3/aarch64/__asm_iNTT.S a/crypto_sign/dilithium3/aarch64/__asm_iNTT.S
index 32b91567..119f7521 100644
--- b/crypto_sign/dilithium3/aarch64/__asm_iNTT.S
+++ a/crypto_sign/dilithium3/aarch64/__asm_iNTT.S
@@ -28,10 +28,10 @@
 #include "macros.inc"
 
 .align 2
-.global PQCLEAN_dilithium3_AARCH64__asm_intt_SIMD_top
-.global _PQCLEAN_dilithium3_AARCH64__asm_intt_SIMD_top
-PQCLEAN_dilithium3_AARCH64__asm_intt_SIMD_top:
-_PQCLEAN_dilithium3_AARCH64__asm_intt_SIMD_top:
+.global PQCLEAN_DILITHIUM3_AARCH64__asm_intt_SIMD_top
+.global _PQCLEAN_DILITHIUM3_AARCH64__asm_intt_SIMD_top
+PQCLEAN_DILITHIUM3_AARCH64__asm_intt_SIMD_top:
+_PQCLEAN_DILITHIUM3_AARCH64__asm_intt_SIMD_top:
 
     push_all
     Q         .req w20
@@ -435,10 +435,10 @@ _PQCLEAN_dilithium3_AARCH64__asm_intt_SIMD_top:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium3_AARCH64__asm_intt_SIMD_bot
-.global _PQCLEAN_dilithium3_AARCH64__asm_intt_SIMD_bot
-PQCLEAN_dilithium3_AARCH64__asm_intt_SIMD_bot:
-_PQCLEAN_dilithium3_AARCH64__asm_intt_SIMD_bot:
+.global PQCLEAN_DILITHIUM3_AARCH64__asm_intt_SIMD_bot
+.global _PQCLEAN_DILITHIUM3_AARCH64__asm_intt_SIMD_bot
+PQCLEAN_DILITHIUM3_AARCH64__asm_intt_SIMD_bot:
+_PQCLEAN_DILITHIUM3_AARCH64__asm_intt_SIMD_bot:
 
     push_all
     Q         .req w20
diff --git b/crypto_sign/dilithium3/aarch64/__asm_poly.S a/crypto_sign/dilithium3/aarch64/__asm_poly.S
index 0336064c..ed888fd1 100644
--- b/crypto_sign/dilithium3/aarch64/__asm_poly.S
+++ a/crypto_sign/dilithium3/aarch64/__asm_poly.S
@@ -29,10 +29,10 @@
 #include "params.h"
 
 .align 2
-.global PQCLEAN_dilithium3_AARCH64__asm_10_to_32
-.global _PQCLEAN_dilithium3_AARCH64__asm_10_to_32
-PQCLEAN_dilithium3_AARCH64__asm_10_to_32:
-_PQCLEAN_dilithium3_AARCH64__asm_10_to_32:
+.global PQCLEAN_DILITHIUM3_AARCH64__asm_10_to_32
+.global _PQCLEAN_DILITHIUM3_AARCH64__asm_10_to_32
+PQCLEAN_DILITHIUM3_AARCH64__asm_10_to_32:
+_PQCLEAN_DILITHIUM3_AARCH64__asm_10_to_32:
 
     mov x7, #16
     _10_to_32_loop:
@@ -102,10 +102,10 @@ _PQCLEAN_dilithium3_AARCH64__asm_10_to_32:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium3_AARCH64__asm_poly_reduce
-.global _PQCLEAN_dilithium3_AARCH64__asm_poly_reduce
-PQCLEAN_dilithium3_AARCH64__asm_poly_reduce:
-_PQCLEAN_dilithium3_AARCH64__asm_poly_reduce:
+.global PQCLEAN_DILITHIUM3_AARCH64__asm_poly_reduce
+.global _PQCLEAN_DILITHIUM3_AARCH64__asm_poly_reduce
+PQCLEAN_DILITHIUM3_AARCH64__asm_poly_reduce:
+_PQCLEAN_DILITHIUM3_AARCH64__asm_poly_reduce:
 
     ldr w4, [x1]
 
@@ -195,10 +195,10 @@ _PQCLEAN_dilithium3_AARCH64__asm_poly_reduce:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium3_AARCH64__asm_poly_caddq
-.global _PQCLEAN_dilithium3_AARCH64__asm_poly_caddq
-PQCLEAN_dilithium3_AARCH64__asm_poly_caddq:
-_PQCLEAN_dilithium3_AARCH64__asm_poly_caddq:
+.global PQCLEAN_DILITHIUM3_AARCH64__asm_poly_caddq
+.global _PQCLEAN_DILITHIUM3_AARCH64__asm_poly_caddq
+PQCLEAN_DILITHIUM3_AARCH64__asm_poly_caddq:
+_PQCLEAN_DILITHIUM3_AARCH64__asm_poly_caddq:
 
     ldr w4, [x1]
 
@@ -288,10 +288,10 @@ _PQCLEAN_dilithium3_AARCH64__asm_poly_caddq:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium3_AARCH64__asm_poly_freeze
-.global _PQCLEAN_dilithium3_AARCH64__asm_poly_freeze
-PQCLEAN_dilithium3_AARCH64__asm_poly_freeze:
-_PQCLEAN_dilithium3_AARCH64__asm_poly_freeze:
+.global PQCLEAN_DILITHIUM3_AARCH64__asm_poly_freeze
+.global _PQCLEAN_DILITHIUM3_AARCH64__asm_poly_freeze
+PQCLEAN_DILITHIUM3_AARCH64__asm_poly_freeze:
+_PQCLEAN_DILITHIUM3_AARCH64__asm_poly_freeze:
 
     ldr w4, [x1]
 
@@ -417,10 +417,10 @@ _PQCLEAN_dilithium3_AARCH64__asm_poly_freeze:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium3_AARCH64__asm_poly_power2round
-.global _PQCLEAN_dilithium3_AARCH64__asm_poly_power2round
-PQCLEAN_dilithium3_AARCH64__asm_poly_power2round:
-_PQCLEAN_dilithium3_AARCH64__asm_poly_power2round:
+.global PQCLEAN_DILITHIUM3_AARCH64__asm_poly_power2round
+.global _PQCLEAN_DILITHIUM3_AARCH64__asm_poly_power2round
+PQCLEAN_DILITHIUM3_AARCH64__asm_poly_power2round:
+_PQCLEAN_DILITHIUM3_AARCH64__asm_poly_power2round:
 
     mov w4, #1
 
@@ -563,10 +563,10 @@ _PQCLEAN_dilithium3_AARCH64__asm_poly_power2round:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium3_AARCH64__asm_poly_add
-.global _PQCLEAN_dilithium3_AARCH64__asm_poly_add
-PQCLEAN_dilithium3_AARCH64__asm_poly_add:
-_PQCLEAN_dilithium3_AARCH64__asm_poly_add:
+.global PQCLEAN_DILITHIUM3_AARCH64__asm_poly_add
+.global _PQCLEAN_DILITHIUM3_AARCH64__asm_poly_add
+PQCLEAN_DILITHIUM3_AARCH64__asm_poly_add:
+_PQCLEAN_DILITHIUM3_AARCH64__asm_poly_add:
 
     ld1 {v0.4S}, [x1], #16
     ld1 {v4.4S}, [x2], #16
@@ -612,10 +612,10 @@ _PQCLEAN_dilithium3_AARCH64__asm_poly_add:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium3_AARCH64__asm_poly_sub
-.global _PQCLEAN_dilithium3_AARCH64__asm_poly_sub
-PQCLEAN_dilithium3_AARCH64__asm_poly_sub:
-_PQCLEAN_dilithium3_AARCH64__asm_poly_sub:
+.global PQCLEAN_DILITHIUM3_AARCH64__asm_poly_sub
+.global _PQCLEAN_DILITHIUM3_AARCH64__asm_poly_sub
+PQCLEAN_DILITHIUM3_AARCH64__asm_poly_sub:
+_PQCLEAN_DILITHIUM3_AARCH64__asm_poly_sub:
 
     ld1 {v0.4S}, [x1], #16
     ld1 {v4.4S}, [x2], #16
@@ -661,10 +661,10 @@ _PQCLEAN_dilithium3_AARCH64__asm_poly_sub:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium3_AARCH64__asm_poly_shiftl
-.global _PQCLEAN_dilithium3_AARCH64__asm_poly_shiftl
-PQCLEAN_dilithium3_AARCH64__asm_poly_shiftl:
-_PQCLEAN_dilithium3_AARCH64__asm_poly_shiftl:
+.global PQCLEAN_DILITHIUM3_AARCH64__asm_poly_shiftl
+.global _PQCLEAN_DILITHIUM3_AARCH64__asm_poly_shiftl
+PQCLEAN_DILITHIUM3_AARCH64__asm_poly_shiftl:
+_PQCLEAN_DILITHIUM3_AARCH64__asm_poly_shiftl:
 
     add x1, x0, #0
 
@@ -728,10 +728,10 @@ _PQCLEAN_dilithium3_AARCH64__asm_poly_shiftl:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium3_AARCH64__asm_poly_pointwise_montgomery
-.global _PQCLEAN_dilithium3_AARCH64__asm_poly_pointwise_montgomery
-PQCLEAN_dilithium3_AARCH64__asm_poly_pointwise_montgomery:
-_PQCLEAN_dilithium3_AARCH64__asm_poly_pointwise_montgomery:
+.global PQCLEAN_DILITHIUM3_AARCH64__asm_poly_pointwise_montgomery
+.global _PQCLEAN_DILITHIUM3_AARCH64__asm_poly_pointwise_montgomery
+PQCLEAN_DILITHIUM3_AARCH64__asm_poly_pointwise_montgomery:
+_PQCLEAN_DILITHIUM3_AARCH64__asm_poly_pointwise_montgomery:
 
     push_all
 
@@ -847,10 +847,10 @@ _PQCLEAN_dilithium3_AARCH64__asm_poly_pointwise_montgomery:
 
 
 .align 2
-.global PQCLEAN_dilithium3_AARCH64__asm_polyvecl_pointwise_acc_montgomery
-.global _PQCLEAN_dilithium3_AARCH64__asm_polyvecl_pointwise_acc_montgomery
-PQCLEAN_dilithium3_AARCH64__asm_polyvecl_pointwise_acc_montgomery:
-_PQCLEAN_dilithium3_AARCH64__asm_polyvecl_pointwise_acc_montgomery:
+.global PQCLEAN_DILITHIUM3_AARCH64__asm_polyvecl_pointwise_acc_montgomery
+.global _PQCLEAN_DILITHIUM3_AARCH64__asm_polyvecl_pointwise_acc_montgomery
+PQCLEAN_DILITHIUM3_AARCH64__asm_polyvecl_pointwise_acc_montgomery:
+_PQCLEAN_DILITHIUM3_AARCH64__asm_polyvecl_pointwise_acc_montgomery:
 
     push_all
 
diff --git b/crypto_sign/dilithium3/aarch64/api.h a/crypto_sign/dilithium3/aarch64/api.h
index 13d9d8cf..6a056440 100644
--- b/crypto_sign/dilithium3/aarch64/api.h
+++ a/crypto_sign/dilithium3/aarch64/api.h
@@ -5,33 +5,33 @@
  * or public domain at https://github.com/pq-crystals/dilithium
  */
 
-#ifndef PQCLEAN_dilithium3_AARCH64_API_H
-#define PQCLEAN_dilithium3_AARCH64_API_H
+#ifndef PQCLEAN_DILITHIUM3_AARCH64_API_H
+#define PQCLEAN_DILITHIUM3_AARCH64_API_H
 
 
 #include <stddef.h>
 #include <stdint.h>
 
-#define PQCLEAN_dilithium3_AARCH64_CRYPTO_PUBLICKEYBYTES 1952
-#define PQCLEAN_dilithium3_AARCH64_CRYPTO_SECRETKEYBYTES 4000
-#define PQCLEAN_dilithium3_AARCH64_CRYPTO_BYTES 3293
-#define PQCLEAN_dilithium3_AARCH64_CRYPTO_ALGNAME "Dilithium3"
+#define PQCLEAN_DILITHIUM3_AARCH64_CRYPTO_PUBLICKEYBYTES 1952
+#define PQCLEAN_DILITHIUM3_AARCH64_CRYPTO_SECRETKEYBYTES 4000
+#define PQCLEAN_DILITHIUM3_AARCH64_CRYPTO_BYTES 3293
+#define PQCLEAN_DILITHIUM3_AARCH64_CRYPTO_ALGNAME "Dilithium3"
 
-int PQCLEAN_dilithium3_AARCH64_crypto_sign_keypair(uint8_t *pk, uint8_t *sk);
+int PQCLEAN_DILITHIUM3_AARCH64_crypto_sign_keypair(uint8_t *pk, uint8_t *sk);
 
-int PQCLEAN_dilithium3_AARCH64_crypto_sign_signature(
+int PQCLEAN_DILITHIUM3_AARCH64_crypto_sign_signature(
     uint8_t *sig, size_t *siglen,
     const uint8_t *m, size_t mlen, const uint8_t *sk);
 
-int PQCLEAN_dilithium3_AARCH64_crypto_sign_verify(
+int PQCLEAN_DILITHIUM3_AARCH64_crypto_sign_verify(
     const uint8_t *sig, size_t siglen,
     const uint8_t *m, size_t mlen, const uint8_t *pk);
 
-int PQCLEAN_dilithium3_AARCH64_crypto_sign(
+int PQCLEAN_DILITHIUM3_AARCH64_crypto_sign(
     uint8_t *sm, size_t *smlen,
     const uint8_t *m, size_t mlen, const uint8_t *sk);
 
-int PQCLEAN_dilithium3_AARCH64_crypto_sign_open(
+int PQCLEAN_DILITHIUM3_AARCH64_crypto_sign_open(
     uint8_t *m, size_t *mlen,
     const uint8_t *sm, size_t smlen, const uint8_t *pk);
 
diff --git b/crypto_sign/dilithium3/aarch64/feat.S a/crypto_sign/dilithium3/aarch64/feat.S
index c0ccd712..358adf61 100644
--- b/crypto_sign/dilithium3/aarch64/feat.S
+++ a/crypto_sign/dilithium3/aarch64/feat.S
@@ -123,10 +123,10 @@ SOFTWARE.
 .endm
 
 .align 4
-.global PQCLEAN_dilithium3_AARCH64_f1600x2
-.global _PQCLEAN_dilithium3_AARCH64_f1600x2
-PQCLEAN_dilithium3_AARCH64_f1600x2:
-_PQCLEAN_dilithium3_AARCH64_f1600x2:
+.global PQCLEAN_DILITHIUM3_AARCH64_f1600x2
+.global _PQCLEAN_DILITHIUM3_AARCH64_f1600x2
+PQCLEAN_DILITHIUM3_AARCH64_f1600x2:
+_PQCLEAN_DILITHIUM3_AARCH64_f1600x2:
     stp d8,  d9,  [sp,#-16]!
     stp d10, d11, [sp,#-16]!
     stp d12, d13, [sp,#-16]!
diff --git b/crypto_sign/dilithium3/aarch64/fips202x2.c a/crypto_sign/dilithium3/aarch64/fips202x2.c
index 0648aa82..e36a6788 100644
--- b/crypto_sign/dilithium3/aarch64/fips202x2.c
+++ a/crypto_sign/dilithium3/aarch64/fips202x2.c
@@ -101,12 +101,12 @@ static const uint64_t neon_KeccakF_RoundConstants[NROUNDS] = {
 *
 * Arguments:   - uint64_t *state: pointer to input/output Keccak state
 **************************************************/
-extern void PQCLEAN_dilithium3_AARCH64_f1600x2(v128*, const uint64_t*);
+extern void PQCLEAN_DILITHIUM3_AARCH64_f1600x2(v128*, const uint64_t*);
 static inline
 void KeccakF1600_StatePermutex2(v128 state[25])
 {
 #if (__APPLE__ && __ARM_FEATURE_CRYPTO) || (__ARM_FEATURE_SHA3) /* although not sure what is being implemented, we find something fast */
-  PQCLEAN_dilithium3_AARCH64_f1600x2(state, neon_KeccakF_RoundConstants);
+  PQCLEAN_DILITHIUM3_AARCH64_f1600x2(state, neon_KeccakF_RoundConstants);
 #else
   v128 Aba, Abe, Abi, Abo, Abu;
   v128 Aga, Age, Agi, Ago, Agu;
diff --git b/crypto_sign/dilithium3/aarch64/ntt.h a/crypto_sign/dilithium3/aarch64/ntt.h
index 3175fd96..2f16fac0 100644
--- b/crypto_sign/dilithium3/aarch64/ntt.h
+++ a/crypto_sign/dilithium3/aarch64/ntt.h
@@ -36,20 +36,20 @@
 #include "params.h"
 #include <stdint.h>
 
-extern void PQCLEAN_dilithium3_AARCH64_asm_ntt_SIMD_top(int *des, const int *table, const int *_constants);
-extern void PQCLEAN_dilithium3_AARCH64_asm_ntt_SIMD_bot(int *des, const int *table, const int *_constants);
+extern void PQCLEAN_DILITHIUM3_AARCH64__asm_ntt_SIMD_top(int *des, const int *table, const int *_constants);
+extern void PQCLEAN_DILITHIUM3_AARCH64__asm_ntt_SIMD_bot(int *des, const int *table, const int *_constants);
 
-extern void PQCLEAN_dilithium3_AARCH64_asm_intt_SIMD_top(int *des, const int *table, const int *_constants);
-extern void PQCLEAN_dilithium3_AARCH64_asm_intt_SIMD_bot(int *des, const int *table, const int *_constants);
+extern void PQCLEAN_DILITHIUM3_AARCH64__asm_intt_SIMD_top(int *des, const int *table, const int *_constants);
+extern void PQCLEAN_DILITHIUM3_AARCH64__asm_intt_SIMD_bot(int *des, const int *table, const int *_constants);
 
 #define NTT(in) { \
-        PQCLEAN_dilithium3_AARCH64_asm_ntt_SIMD_top(in, streamlined_CT_negacyclic_table_Q1_extended, constants); \
-        PQCLEAN_dilithium3_AARCH64_asm_ntt_SIMD_bot(in, streamlined_CT_negacyclic_table_Q1_extended, constants); \
+        PQCLEAN_DILITHIUM3_AARCH64__asm_ntt_SIMD_top(in, streamlined_CT_negacyclic_table_Q1_extended, constants); \
+        PQCLEAN_DILITHIUM3_AARCH64__asm_ntt_SIMD_bot(in, streamlined_CT_negacyclic_table_Q1_extended, constants); \
     }
 
 #define iNTT(in) { \
-        PQCLEAN_dilithium3_AARCH64_asm_intt_SIMD_bot(in, streamlined_inv_CT_table_Q1_extended, constants); \
-        PQCLEAN_dilithium3_AARCH64_asm_intt_SIMD_top(in, streamlined_inv_CT_table_Q1_extended, constants); \
+        PQCLEAN_DILITHIUM3_AARCH64__asm_intt_SIMD_bot(in, streamlined_inv_CT_table_Q1_extended, constants); \
+        PQCLEAN_DILITHIUM3_AARCH64__asm_intt_SIMD_top(in, streamlined_inv_CT_table_Q1_extended, constants); \
     }
 
 #define ntt DILITHIUM_NAMESPACE(ntt)
diff --git b/crypto_sign/dilithium3/aarch64/params.h a/crypto_sign/dilithium3/aarch64/params.h
index 9d722c2a..0ee61152 100644
--- b/crypto_sign/dilithium3/aarch64/params.h
+++ a/crypto_sign/dilithium3/aarch64/params.h
@@ -12,8 +12,8 @@
 #define DILITHIUM_MODE 3
 //#define DILITHIUM_MODE 5
 
-#define CRYPTO_NAMESPACETOP PQCLEAN_dilithium3_AARCH64_crypto_sign
-#define CRYPTO_NAMESPACE(s) PQCLEAN_dilithium3_AARCH64_##s
+#define CRYPTO_NAMESPACETOP PQCLEAN_DILITHIUM3_AARCH64_crypto_sign
+#define CRYPTO_NAMESPACE(s) PQCLEAN_DILITHIUM3_AARCH64_##s
 #define DILITHIUM_NAMESPACETOP CRYPTO_NAMESPACETOP
 #define DILITHIUM_NAMESPACE(s) CRYPTO_NAMESPACE(s)
 
diff --git b/crypto_sign/dilithium3/aarch64/poly.c a/crypto_sign/dilithium3/aarch64/poly.c
index 5a7fd240..f13f981e 100644
--- b/crypto_sign/dilithium3/aarch64/poly.c
+++ a/crypto_sign/dilithium3/aarch64/poly.c
@@ -57,11 +57,11 @@ static const int32_t montgomery_const[4] = {
 *
 * Arguments:   - poly *a: pointer to input/output polynomial
 **************************************************/
-extern void PQCLEAN_dilithium3_AARCH64_asm_poly_reduce(int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM3_AARCH64__asm_poly_reduce(int32_t *, const int32_t *);
 void poly_reduce(poly *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium3_AARCH64_asm_poly_reduce(a->coeffs, montgomery_const);
+    PQCLEAN_DILITHIUM3_AARCH64__asm_poly_reduce(a->coeffs, montgomery_const);
 
     DBENCH_STOP(*tred);
 }
@@ -74,11 +74,11 @@ void poly_reduce(poly *a) {
 *
 * Arguments:   - poly *a: pointer to input/output polynomial
 **************************************************/
-extern void PQCLEAN_dilithium3_AARCH64_asm_poly_caddq(int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM3_AARCH64__asm_poly_caddq(int32_t *, const int32_t *);
 void poly_caddq(poly *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium3_AARCH64_asm_poly_caddq(a->coeffs, montgomery_const);
+    PQCLEAN_DILITHIUM3_AARCH64__asm_poly_caddq(a->coeffs, montgomery_const);
 
     DBENCH_STOP(*tred);
 }
@@ -91,11 +91,11 @@ void poly_caddq(poly *a) {
 *
 * Arguments:   - poly *a: pointer to input/output polynomial
 **************************************************/
-extern void PQCLEAN_dilithium3_AARCH64_asm_poly_freeze(int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM3_AARCH64__asm_poly_freeze(int32_t *, const int32_t *);
 void poly_freeze(poly *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium3_AARCH64_asm_poly_freeze(a->coeffs, montgomery_const);
+    PQCLEAN_DILITHIUM3_AARCH64__asm_poly_freeze(a->coeffs, montgomery_const);
 
     DBENCH_STOP(*tred);
 }
@@ -205,11 +205,11 @@ void poly_invntt_tomont(poly *a) {
 *              - const poly *a: pointer to first input polynomial
 *              - const poly *b: pointer to second input polynomial
 **************************************************/
-extern void PQCLEAN_dilithium3_AARCH64_asm_poly_pointwise_montgomery(int32_t *des, const int32_t *src1, const int32_t *src2, const int32_t *table);
+extern void PQCLEAN_DILITHIUM3_AARCH64__asm_poly_pointwise_montgomery(int32_t *des, const int32_t *src1, const int32_t *src2, const int32_t *table);
 void poly_pointwise_montgomery(poly *c, const poly *a, const poly *b) {
     DBENCH_START();
 
-    PQCLEAN_dilithium3_AARCH64_asm_poly_pointwise_montgomery(c->coeffs, a->coeffs, b->coeffs, montgomery_const);
+    PQCLEAN_DILITHIUM3_AARCH64__asm_poly_pointwise_montgomery(c->coeffs, a->coeffs, b->coeffs, montgomery_const);
 
     DBENCH_STOP(*tmul);
 }
@@ -226,11 +226,11 @@ void poly_pointwise_montgomery(poly *c, const poly *a, const poly *b) {
 *              - poly *a0: pointer to output polynomial with coefficients c0
 *              - const poly *a: pointer to input polynomial
 **************************************************/
-extern void PQCLEAN_dilithium3_AARCH64_asm_poly_power2round(int32_t *, int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM3_AARCH64__asm_poly_power2round(int32_t *, int32_t *, const int32_t *);
 void poly_power2round(poly *a1, poly *a0, const poly *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium3_AARCH64_asm_poly_power2round(a1->coeffs, a0->coeffs, a->coeffs);
+    PQCLEAN_DILITHIUM3_AARCH64__asm_poly_power2round(a1->coeffs, a0->coeffs, a->coeffs);
 
     DBENCH_STOP(*tround);
 }
@@ -714,11 +714,11 @@ void polyt1_pack(uint8_t *r, const poly *a) {
 * Arguments:   - poly *r: pointer to output polynomial
 *              - const uint8_t *a: byte array with bit-packed polynomial
 **************************************************/
-extern void PQCLEAN_dilithium3_AARCH64_asm_10_to_32(int32_t *, const uint8_t *);
+extern void PQCLEAN_DILITHIUM3_AARCH64__asm_10_to_32(int32_t *, const uint8_t *);
 void polyt1_unpack(poly *r, const uint8_t *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium3_AARCH64_asm_10_to_32(r->coeffs, a);
+    PQCLEAN_DILITHIUM3_AARCH64__asm_10_to_32(r->coeffs, a);
 
     DBENCH_STOP(*tpack);
 }
diff --git b/crypto_sign/dilithium3/aarch64/polyvec.c a/crypto_sign/dilithium3/aarch64/polyvec.c
index 3a5e6acb..b73d210c 100644
--- b/crypto_sign/dilithium3/aarch64/polyvec.c
+++ a/crypto_sign/dilithium3/aarch64/polyvec.c
@@ -178,11 +178,11 @@ void polyvecl_pointwise_poly_montgomery(polyvecl *r, const poly *a, const polyve
 *              - const polyvecl *u: pointer to first input vector
 *              - const polyvecl *v: pointer to second input vector
 **************************************************/
-extern void PQCLEAN_dilithium3_AARCH64_asm_polyvecl_pointwise_acc_montgomery(int32_t *, const int32_t *, const int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM3_AARCH64__asm_polyvecl_pointwise_acc_montgomery(int32_t *, const int32_t *, const int32_t *, const int32_t *);
 void polyvecl_pointwise_acc_montgomery(poly *w,
                                        const polyvecl *u,
                                        const polyvecl *v) {
-    PQCLEAN_dilithium3_AARCH64_asm_polyvecl_pointwise_acc_montgomery(w->coeffs, u->vec[0].coeffs, v->vec[0].coeffs, l_montgomery_const);
+    PQCLEAN_DILITHIUM3_AARCH64__asm_polyvecl_pointwise_acc_montgomery(w->coeffs, u->vec[0].coeffs, v->vec[0].coeffs, l_montgomery_const);
 }
 
 /*************************************************
diff --git b/crypto_sign/dilithium5/aarch64/__asm_NTT.S a/crypto_sign/dilithium5/aarch64/__asm_NTT.S
index a98ae018..9cf61432 100644
--- b/crypto_sign/dilithium5/aarch64/__asm_NTT.S
+++ a/crypto_sign/dilithium5/aarch64/__asm_NTT.S
@@ -28,10 +28,10 @@
 #include "macros.inc"
 
 .align 2
-.global PQCLEAN_dilithium5_AARCH64__asm_ntt_SIMD_top
-.global _PQCLEAN_dilithium5_AARCH64__asm_ntt_SIMD_top
-PQCLEAN_dilithium5_AARCH64__asm_ntt_SIMD_top:
-_PQCLEAN_dilithium5_AARCH64__asm_ntt_SIMD_top:
+.global PQCLEAN_DILITHIUM5_AARCH64__asm_ntt_SIMD_top
+.global _PQCLEAN_DILITHIUM5_AARCH64__asm_ntt_SIMD_top
+PQCLEAN_DILITHIUM5_AARCH64__asm_ntt_SIMD_top:
+_PQCLEAN_DILITHIUM5_AARCH64__asm_ntt_SIMD_top:
 
     push_all
     Q         .req w20
@@ -206,10 +206,10 @@ _PQCLEAN_dilithium5_AARCH64__asm_ntt_SIMD_top:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium5_AARCH64__asm_ntt_SIMD_bot
-.global _PQCLEAN_dilithium5_AARCH64__asm_ntt_SIMD_bot
-PQCLEAN_dilithium5_AARCH64__asm_ntt_SIMD_bot:
-_PQCLEAN_dilithium5_AARCH64__asm_ntt_SIMD_bot:
+.global PQCLEAN_DILITHIUM5_AARCH64__asm_ntt_SIMD_bot
+.global _PQCLEAN_DILITHIUM5_AARCH64__asm_ntt_SIMD_bot
+PQCLEAN_DILITHIUM5_AARCH64__asm_ntt_SIMD_bot:
+_PQCLEAN_DILITHIUM5_AARCH64__asm_ntt_SIMD_bot:
 
     push_all
     Q         .req w20
diff --git b/crypto_sign/dilithium5/aarch64/__asm_iNTT.S a/crypto_sign/dilithium5/aarch64/__asm_iNTT.S
index 68179e9d..9daebaf6 100644
--- b/crypto_sign/dilithium5/aarch64/__asm_iNTT.S
+++ a/crypto_sign/dilithium5/aarch64/__asm_iNTT.S
@@ -28,10 +28,10 @@
 #include "macros.inc"
 
 .align 2
-.global PQCLEAN_dilithium5_AARCH64__asm_intt_SIMD_top
-.global _PQCLEAN_dilithium5_AARCH64__asm_intt_SIMD_top
-PQCLEAN_dilithium5_AARCH64__asm_intt_SIMD_top:
-_PQCLEAN_dilithium5_AARCH64__asm_intt_SIMD_top:
+.global PQCLEAN_DILITHIUM5_AARCH64__asm_intt_SIMD_top
+.global _PQCLEAN_DILITHIUM5_AARCH64__asm_intt_SIMD_top
+PQCLEAN_DILITHIUM5_AARCH64__asm_intt_SIMD_top:
+_PQCLEAN_DILITHIUM5_AARCH64__asm_intt_SIMD_top:
 
     push_all
     Q         .req w20
@@ -435,10 +435,10 @@ _PQCLEAN_dilithium5_AARCH64__asm_intt_SIMD_top:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium5_AARCH64__asm_intt_SIMD_bot
-.global _PQCLEAN_dilithium5_AARCH64__asm_intt_SIMD_bot
-PQCLEAN_dilithium5_AARCH64__asm_intt_SIMD_bot:
-_PQCLEAN_dilithium5_AARCH64__asm_intt_SIMD_bot:
+.global PQCLEAN_DILITHIUM5_AARCH64__asm_intt_SIMD_bot
+.global _PQCLEAN_DILITHIUM5_AARCH64__asm_intt_SIMD_bot
+PQCLEAN_DILITHIUM5_AARCH64__asm_intt_SIMD_bot:
+_PQCLEAN_DILITHIUM5_AARCH64__asm_intt_SIMD_bot:
 
     push_all
     Q         .req w20
diff --git b/crypto_sign/dilithium5/aarch64/__asm_poly.S a/crypto_sign/dilithium5/aarch64/__asm_poly.S
index 79e01e9d..edcc82b2 100644
--- b/crypto_sign/dilithium5/aarch64/__asm_poly.S
+++ a/crypto_sign/dilithium5/aarch64/__asm_poly.S
@@ -29,10 +29,10 @@
 #include "params.h"
 
 .align 2
-.global PQCLEAN_dilithium5_AARCH64__asm_10_to_32
-.global _PQCLEAN_dilithium5_AARCH64__asm_10_to_32
-PQCLEAN_dilithium5_AARCH64__asm_10_to_32:
-_PQCLEAN_dilithium5_AARCH64__asm_10_to_32:
+.global PQCLEAN_DILITHIUM5_AARCH64__asm_10_to_32
+.global _PQCLEAN_DILITHIUM5_AARCH64__asm_10_to_32
+PQCLEAN_DILITHIUM5_AARCH64__asm_10_to_32:
+_PQCLEAN_DILITHIUM5_AARCH64__asm_10_to_32:
 
     mov x7, #16
     _10_to_32_loop:
@@ -102,10 +102,10 @@ _PQCLEAN_dilithium5_AARCH64__asm_10_to_32:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium5_AARCH64__asm_poly_reduce
-.global _PQCLEAN_dilithium5_AARCH64__asm_poly_reduce
-PQCLEAN_dilithium5_AARCH64__asm_poly_reduce:
-_PQCLEAN_dilithium5_AARCH64__asm_poly_reduce:
+.global PQCLEAN_DILITHIUM5_AARCH64__asm_poly_reduce
+.global _PQCLEAN_DILITHIUM5_AARCH64__asm_poly_reduce
+PQCLEAN_DILITHIUM5_AARCH64__asm_poly_reduce:
+_PQCLEAN_DILITHIUM5_AARCH64__asm_poly_reduce:
 
     ldr w4, [x1]
 
@@ -195,10 +195,10 @@ _PQCLEAN_dilithium5_AARCH64__asm_poly_reduce:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium5_AARCH64__asm_poly_caddq
-.global _PQCLEAN_dilithium5_AARCH64__asm_poly_caddq
-PQCLEAN_dilithium5_AARCH64__asm_poly_caddq:
-_PQCLEAN_dilithium5_AARCH64__asm_poly_caddq:
+.global PQCLEAN_DILITHIUM5_AARCH64__asm_poly_caddq
+.global _PQCLEAN_DILITHIUM5_AARCH64__asm_poly_caddq
+PQCLEAN_DILITHIUM5_AARCH64__asm_poly_caddq:
+_PQCLEAN_DILITHIUM5_AARCH64__asm_poly_caddq:
 
     ldr w4, [x1]
 
@@ -288,10 +288,10 @@ _PQCLEAN_dilithium5_AARCH64__asm_poly_caddq:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium5_AARCH64__asm_poly_freeze
-.global _PQCLEAN_dilithium5_AARCH64__asm_poly_freeze
-PQCLEAN_dilithium5_AARCH64__asm_poly_freeze:
-_PQCLEAN_dilithium5_AARCH64__asm_poly_freeze:
+.global PQCLEAN_DILITHIUM5_AARCH64__asm_poly_freeze
+.global _PQCLEAN_DILITHIUM5_AARCH64__asm_poly_freeze
+PQCLEAN_DILITHIUM5_AARCH64__asm_poly_freeze:
+_PQCLEAN_DILITHIUM5_AARCH64__asm_poly_freeze:
 
     ldr w4, [x1]
 
@@ -417,10 +417,10 @@ _PQCLEAN_dilithium5_AARCH64__asm_poly_freeze:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium5_AARCH64__asm_poly_power2round
-.global _PQCLEAN_dilithium5_AARCH64__asm_poly_power2round
-PQCLEAN_dilithium5_AARCH64__asm_poly_power2round:
-_PQCLEAN_dilithium5_AARCH64__asm_poly_power2round:
+.global PQCLEAN_DILITHIUM5_AARCH64__asm_poly_power2round
+.global _PQCLEAN_DILITHIUM5_AARCH64__asm_poly_power2round
+PQCLEAN_DILITHIUM5_AARCH64__asm_poly_power2round:
+_PQCLEAN_DILITHIUM5_AARCH64__asm_poly_power2round:
 
     mov w4, #1
 
@@ -563,10 +563,10 @@ _PQCLEAN_dilithium5_AARCH64__asm_poly_power2round:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium5_AARCH64__asm_poly_add
-.global _PQCLEAN_dilithium5_AARCH64__asm_poly_add
-PQCLEAN_dilithium5_AARCH64__asm_poly_add:
-_PQCLEAN_dilithium5_AARCH64__asm_poly_add:
+.global PQCLEAN_DILITHIUM5_AARCH64__asm_poly_add
+.global _PQCLEAN_DILITHIUM5_AARCH64__asm_poly_add
+PQCLEAN_DILITHIUM5_AARCH64__asm_poly_add:
+_PQCLEAN_DILITHIUM5_AARCH64__asm_poly_add:
 
     ld1 {v0.4S}, [x1], #16
     ld1 {v4.4S}, [x2], #16
@@ -612,10 +612,10 @@ _PQCLEAN_dilithium5_AARCH64__asm_poly_add:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium5_AARCH64__asm_poly_sub
-.global _PQCLEAN_dilithium5_AARCH64__asm_poly_sub
-PQCLEAN_dilithium5_AARCH64__asm_poly_sub:
-_PQCLEAN_dilithium5_AARCH64__asm_poly_sub:
+.global PQCLEAN_DILITHIUM5_AARCH64__asm_poly_sub
+.global _PQCLEAN_DILITHIUM5_AARCH64__asm_poly_sub
+PQCLEAN_DILITHIUM5_AARCH64__asm_poly_sub:
+_PQCLEAN_DILITHIUM5_AARCH64__asm_poly_sub:
 
     ld1 {v0.4S}, [x1], #16
     ld1 {v4.4S}, [x2], #16
@@ -661,10 +661,10 @@ _PQCLEAN_dilithium5_AARCH64__asm_poly_sub:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium5_AARCH64__asm_poly_shiftl
-.global _PQCLEAN_dilithium5_AARCH64__asm_poly_shiftl
-PQCLEAN_dilithium5_AARCH64__asm_poly_shiftl:
-_PQCLEAN_dilithium5_AARCH64__asm_poly_shiftl:
+.global PQCLEAN_DILITHIUM5_AARCH64__asm_poly_shiftl
+.global _PQCLEAN_DILITHIUM5_AARCH64__asm_poly_shiftl
+PQCLEAN_DILITHIUM5_AARCH64__asm_poly_shiftl:
+_PQCLEAN_DILITHIUM5_AARCH64__asm_poly_shiftl:
 
     add x1, x0, #0
 
@@ -728,10 +728,10 @@ _PQCLEAN_dilithium5_AARCH64__asm_poly_shiftl:
     br lr
 
 .align 2
-.global PQCLEAN_dilithium5_AARCH64__asm_poly_pointwise_montgomery
-.global _PQCLEAN_dilithium5_AARCH64__asm_poly_pointwise_montgomery
-PQCLEAN_dilithium5_AARCH64__asm_poly_pointwise_montgomery:
-_PQCLEAN_dilithium5_AARCH64__asm_poly_pointwise_montgomery:
+.global PQCLEAN_DILITHIUM5_AARCH64__asm_poly_pointwise_montgomery
+.global _PQCLEAN_DILITHIUM5_AARCH64__asm_poly_pointwise_montgomery
+PQCLEAN_DILITHIUM5_AARCH64__asm_poly_pointwise_montgomery:
+_PQCLEAN_DILITHIUM5_AARCH64__asm_poly_pointwise_montgomery:
 
     push_all
 
@@ -847,10 +847,10 @@ _PQCLEAN_dilithium5_AARCH64__asm_poly_pointwise_montgomery:
 
 
 .align 2
-.global PQCLEAN_dilithium5_AARCH64__asm_polyvecl_pointwise_acc_montgomery
-.global _PQCLEAN_dilithium5_AARCH64__asm_polyvecl_pointwise_acc_montgomery
-PQCLEAN_dilithium5_AARCH64__asm_polyvecl_pointwise_acc_montgomery:
-_PQCLEAN_dilithium5_AARCH64__asm_polyvecl_pointwise_acc_montgomery:
+.global PQCLEAN_DILITHIUM5_AARCH64__asm_polyvecl_pointwise_acc_montgomery
+.global _PQCLEAN_DILITHIUM5_AARCH64__asm_polyvecl_pointwise_acc_montgomery
+PQCLEAN_DILITHIUM5_AARCH64__asm_polyvecl_pointwise_acc_montgomery:
+_PQCLEAN_DILITHIUM5_AARCH64__asm_polyvecl_pointwise_acc_montgomery:
 
     push_all
 
diff --git b/crypto_sign/dilithium5/aarch64/api.h a/crypto_sign/dilithium5/aarch64/api.h
index 4c488918..ab5e2c41 100644
--- b/crypto_sign/dilithium5/aarch64/api.h
+++ a/crypto_sign/dilithium5/aarch64/api.h
@@ -5,34 +5,34 @@
  * or public domain at https://github.com/pq-crystals/dilithium
  */
 
-#ifndef PQCLEAN_dilithium5_AARCH64_API_H
-#define PQCLEAN_dilithium5_AARCH64_API_H
+#ifndef PQCLEAN_DILITHIUM5_AARCH64_API_H
+#define PQCLEAN_DILITHIUM5_AARCH64_API_H
 
 
 #include <stddef.h>
 #include <stdint.h>
 
-#define PQCLEAN_dilithium5_AARCH64_CRYPTO_PUBLICKEYBYTES 2592
-#define PQCLEAN_dilithium5_AARCH64_CRYPTO_SECRETKEYBYTES 4864
-#define PQCLEAN_dilithium5_AARCH64_CRYPTO_BYTES 4595
-#define PQCLEAN_dilithium5_AARCH64_CRYPTO_ALGNAME "Dilithium5"
+#define PQCLEAN_DILITHIUM5_AARCH64_CRYPTO_PUBLICKEYBYTES 2592
+#define PQCLEAN_DILITHIUM5_AARCH64_CRYPTO_SECRETKEYBYTES 4864
+#define PQCLEAN_DILITHIUM5_AARCH64_CRYPTO_BYTES 4595
+#define PQCLEAN_DILITHIUM5_AARCH64_CRYPTO_ALGNAME "Dilithium5"
 
 
-int PQCLEAN_dilithium5_AARCH64_crypto_sign_keypair(uint8_t *pk, uint8_t *sk);
+int PQCLEAN_DILITHIUM5_AARCH64_crypto_sign_keypair(uint8_t *pk, uint8_t *sk);
 
-int PQCLEAN_dilithium5_AARCH64_crypto_sign_signature(
+int PQCLEAN_DILITHIUM5_AARCH64_crypto_sign_signature(
     uint8_t *sig, size_t *siglen,
     const uint8_t *m, size_t mlen, const uint8_t *sk);
 
-int PQCLEAN_dilithium5_AARCH64_crypto_sign_verify(
+int PQCLEAN_DILITHIUM5_AARCH64_crypto_sign_verify(
     const uint8_t *sig, size_t siglen,
     const uint8_t *m, size_t mlen, const uint8_t *pk);
 
-int PQCLEAN_dilithium5_AARCH64_crypto_sign(
+int PQCLEAN_DILITHIUM5_AARCH64_crypto_sign(
     uint8_t *sm, size_t *smlen,
     const uint8_t *m, size_t mlen, const uint8_t *sk);
 
-int PQCLEAN_dilithium5_AARCH64_crypto_sign_open(
+int PQCLEAN_DILITHIUM5_AARCH64_crypto_sign_open(
     uint8_t *m, size_t *mlen,
     const uint8_t *sm, size_t smlen, const uint8_t *pk);
 
diff --git b/crypto_sign/dilithium5/aarch64/feat.S a/crypto_sign/dilithium5/aarch64/feat.S
index fe2a90d5..01abc10a 100644
--- b/crypto_sign/dilithium5/aarch64/feat.S
+++ a/crypto_sign/dilithium5/aarch64/feat.S
@@ -123,10 +123,10 @@ SOFTWARE.
 .endm
 
 .align 4
-.global PQCLEAN_dilithium5_AARCH64_f1600x2
-.global _PQCLEAN_dilithium5_AARCH64_f1600x2
-PQCLEAN_dilithium5_AARCH64_f1600x2:
-_PQCLEAN_dilithium5_AARCH64_f1600x2:
+.global PQCLEAN_DILITHIUM5_AARCH64_f1600x2
+.global _PQCLEAN_DILITHIUM5_AARCH64_f1600x2
+PQCLEAN_DILITHIUM5_AARCH64_f1600x2:
+_PQCLEAN_DILITHIUM5_AARCH64_f1600x2:
     stp d8,  d9,  [sp,#-16]!
     stp d10, d11, [sp,#-16]!
     stp d12, d13, [sp,#-16]!
diff --git b/crypto_sign/dilithium5/aarch64/fips202x2.c a/crypto_sign/dilithium5/aarch64/fips202x2.c
index 2573e2c8..259b199f 100644
--- b/crypto_sign/dilithium5/aarch64/fips202x2.c
+++ a/crypto_sign/dilithium5/aarch64/fips202x2.c
@@ -101,12 +101,12 @@ static const uint64_t neon_KeccakF_RoundConstants[NROUNDS] = {
 *
 * Arguments:   - uint64_t *state: pointer to input/output Keccak state
 **************************************************/
-extern void PQCLEAN_dilithium5_AARCH64_f1600x2(v128*, const uint64_t*);
+extern void PQCLEAN_DILITHIUM5_AARCH64_f1600x2(v128*, const uint64_t*);
 static inline
 void KeccakF1600_StatePermutex2(v128 state[25])
 {
 #if (__APPLE__ && __ARM_FEATURE_CRYPTO) || (__ARM_FEATURE_SHA3) /* although not sure what is being implemented, we find something fast */
-  PQCLEAN_dilithium5_AARCH64_f1600x2(state, neon_KeccakF_RoundConstants);
+  PQCLEAN_DILITHIUM5_AARCH64_f1600x2(state, neon_KeccakF_RoundConstants);
 #else
   v128 Aba, Abe, Abi, Abo, Abu;
   v128 Aga, Age, Agi, Ago, Agu;
diff --git b/crypto_sign/dilithium5/aarch64/ntt.h a/crypto_sign/dilithium5/aarch64/ntt.h
index 6e593d84..e6f51189 100644
--- b/crypto_sign/dilithium5/aarch64/ntt.h
+++ a/crypto_sign/dilithium5/aarch64/ntt.h
@@ -36,20 +36,20 @@
 #include "params.h"
 #include <stdint.h>
 
-extern void PQCLEAN_dilithium5_AARCH64_asm_ntt_SIMD_top(int *des, const int *table, const int *_constants);
-extern void PQCLEAN_dilithium5_AARCH64_asm_ntt_SIMD_bot(int *des, const int *table, const int *_constants);
+extern void PQCLEAN_DILITHIUM5_AARCH64__asm_ntt_SIMD_top(int *des, const int *table, const int *_constants);
+extern void PQCLEAN_DILITHIUM5_AARCH64__asm_ntt_SIMD_bot(int *des, const int *table, const int *_constants);
 
-extern void PQCLEAN_dilithium5_AARCH64_asm_intt_SIMD_top(int *des, const int *table, const int *_constants);
-extern void PQCLEAN_dilithium5_AARCH64_asm_intt_SIMD_bot(int *des, const int *table, const int *_constants);
+extern void PQCLEAN_DILITHIUM5_AARCH64__asm_intt_SIMD_top(int *des, const int *table, const int *_constants);
+extern void PQCLEAN_DILITHIUM5_AARCH64__asm_intt_SIMD_bot(int *des, const int *table, const int *_constants);
 
 #define NTT(in) { \
-        PQCLEAN_dilithium5_AARCH64_asm_ntt_SIMD_top(in, streamlined_CT_negacyclic_table_Q1_extended, constants); \
-        PQCLEAN_dilithium5_AARCH64_asm_ntt_SIMD_bot(in, streamlined_CT_negacyclic_table_Q1_extended, constants); \
+        PQCLEAN_DILITHIUM5_AARCH64__asm_ntt_SIMD_top(in, streamlined_CT_negacyclic_table_Q1_extended, constants); \
+        PQCLEAN_DILITHIUM5_AARCH64__asm_ntt_SIMD_bot(in, streamlined_CT_negacyclic_table_Q1_extended, constants); \
     }
 
 #define iNTT(in) { \
-        PQCLEAN_dilithium5_AARCH64_asm_intt_SIMD_bot(in, streamlined_inv_CT_table_Q1_extended, constants); \
-        PQCLEAN_dilithium5_AARCH64_asm_intt_SIMD_top(in, streamlined_inv_CT_table_Q1_extended, constants); \
+        PQCLEAN_DILITHIUM5_AARCH64__asm_intt_SIMD_bot(in, streamlined_inv_CT_table_Q1_extended, constants); \
+        PQCLEAN_DILITHIUM5_AARCH64__asm_intt_SIMD_top(in, streamlined_inv_CT_table_Q1_extended, constants); \
     }
 
 #define ntt DILITHIUM_NAMESPACE(ntt)
diff --git b/crypto_sign/dilithium5/aarch64/params.h a/crypto_sign/dilithium5/aarch64/params.h
index 589b05b8..a967fd4a 100644
--- b/crypto_sign/dilithium5/aarch64/params.h
+++ a/crypto_sign/dilithium5/aarch64/params.h
@@ -12,8 +12,8 @@
 //#define DILITHIUM_MODE 3
 #define DILITHIUM_MODE 5
 
-#define CRYPTO_NAMESPACETOP PQCLEAN_dilithium5_AARCH64_crypto_sign
-#define CRYPTO_NAMESPACE(s) PQCLEAN_dilithium5_AARCH64_##s
+#define CRYPTO_NAMESPACETOP PQCLEAN_DILITHIUM5_AARCH64_crypto_sign
+#define CRYPTO_NAMESPACE(s) PQCLEAN_DILITHIUM5_AARCH64_##s
 #define DILITHIUM_NAMESPACETOP CRYPTO_NAMESPACETOP
 #define DILITHIUM_NAMESPACE(s) CRYPTO_NAMESPACE(s)
 
diff --git b/crypto_sign/dilithium5/aarch64/poly.c a/crypto_sign/dilithium5/aarch64/poly.c
index 9b22c9c9..788bb14b 100644
--- b/crypto_sign/dilithium5/aarch64/poly.c
+++ a/crypto_sign/dilithium5/aarch64/poly.c
@@ -57,11 +57,11 @@ static const int32_t montgomery_const[4] = {
 *
 * Arguments:   - poly *a: pointer to input/output polynomial
 **************************************************/
-extern void PQCLEAN_dilithium5_AARCH64_asm_poly_reduce(int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM5_AARCH64__asm_poly_reduce(int32_t *, const int32_t *);
 void poly_reduce(poly *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium5_AARCH64_asm_poly_reduce(a->coeffs, montgomery_const);
+    PQCLEAN_DILITHIUM5_AARCH64__asm_poly_reduce(a->coeffs, montgomery_const);
 
     DBENCH_STOP(*tred);
 }
@@ -74,11 +74,11 @@ void poly_reduce(poly *a) {
 *
 * Arguments:   - poly *a: pointer to input/output polynomial
 **************************************************/
-extern void PQCLEAN_dilithium5_AARCH64_asm_poly_caddq(int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM5_AARCH64__asm_poly_caddq(int32_t *, const int32_t *);
 void poly_caddq(poly *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium5_AARCH64_asm_poly_caddq(a->coeffs, montgomery_const);
+    PQCLEAN_DILITHIUM5_AARCH64__asm_poly_caddq(a->coeffs, montgomery_const);
 
     DBENCH_STOP(*tred);
 }
@@ -91,11 +91,11 @@ void poly_caddq(poly *a) {
 *
 * Arguments:   - poly *a: pointer to input/output polynomial
 **************************************************/
-extern void PQCLEAN_dilithium5_AARCH64_asm_poly_freeze(int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM5_AARCH64__asm_poly_freeze(int32_t *, const int32_t *);
 void poly_freeze(poly *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium5_AARCH64_asm_poly_freeze(a->coeffs, montgomery_const);
+    PQCLEAN_DILITHIUM5_AARCH64__asm_poly_freeze(a->coeffs, montgomery_const);
 
     DBENCH_STOP(*tred);
 }
@@ -205,11 +205,11 @@ void poly_invntt_tomont(poly *a) {
 *              - const poly *a: pointer to first input polynomial
 *              - const poly *b: pointer to second input polynomial
 **************************************************/
-extern void PQCLEAN_dilithium5_AARCH64_asm_poly_pointwise_montgomery(int32_t *des, const int32_t *src1, const int32_t *src2, const int32_t *table);
+extern void PQCLEAN_DILITHIUM5_AARCH64__asm_poly_pointwise_montgomery(int32_t *des, const int32_t *src1, const int32_t *src2, const int32_t *table);
 void poly_pointwise_montgomery(poly *c, const poly *a, const poly *b) {
     DBENCH_START();
 
-    PQCLEAN_dilithium5_AARCH64_asm_poly_pointwise_montgomery(c->coeffs, a->coeffs, b->coeffs, montgomery_const);
+    PQCLEAN_DILITHIUM5_AARCH64__asm_poly_pointwise_montgomery(c->coeffs, a->coeffs, b->coeffs, montgomery_const);
 
     DBENCH_STOP(*tmul);
 }
@@ -226,11 +226,11 @@ void poly_pointwise_montgomery(poly *c, const poly *a, const poly *b) {
 *              - poly *a0: pointer to output polynomial with coefficients c0
 *              - const poly *a: pointer to input polynomial
 **************************************************/
-extern void PQCLEAN_dilithium5_AARCH64_asm_poly_power2round(int32_t *, int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM5_AARCH64__asm_poly_power2round(int32_t *, int32_t *, const int32_t *);
 void poly_power2round(poly *a1, poly *a0, const poly *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium5_AARCH64_asm_poly_power2round(a1->coeffs, a0->coeffs, a->coeffs);
+    PQCLEAN_DILITHIUM5_AARCH64__asm_poly_power2round(a1->coeffs, a0->coeffs, a->coeffs);
 
     DBENCH_STOP(*tround);
 }
@@ -738,11 +738,11 @@ void polyt1_pack(uint8_t *r, const poly *a) {
 * Arguments:   - poly *r: pointer to output polynomial
 *              - const uint8_t *a: byte array with bit-packed polynomial
 **************************************************/
-extern void PQCLEAN_dilithium5_AARCH64_asm_10_to_32(int32_t *, const uint8_t *);
+extern void PQCLEAN_DILITHIUM5_AARCH64__asm_10_to_32(int32_t *, const uint8_t *);
 void polyt1_unpack(poly *r, const uint8_t *a) {
     DBENCH_START();
 
-    PQCLEAN_dilithium5_AARCH64_asm_10_to_32(r->coeffs, a);
+    PQCLEAN_DILITHIUM5_AARCH64__asm_10_to_32(r->coeffs, a);
 
     DBENCH_STOP(*tpack);
 }
diff --git b/crypto_sign/dilithium5/aarch64/polyvec.c a/crypto_sign/dilithium5/aarch64/polyvec.c
index 262543ca..4496aaf0 100644
--- b/crypto_sign/dilithium5/aarch64/polyvec.c
+++ a/crypto_sign/dilithium5/aarch64/polyvec.c
@@ -178,11 +178,11 @@ void polyvecl_pointwise_poly_montgomery(polyvecl *r, const poly *a, const polyve
 *              - const polyvecl *u: pointer to first input vector
 *              - const polyvecl *v: pointer to second input vector
 **************************************************/
-extern void PQCLEAN_dilithium5_AARCH64_asm_polyvecl_pointwise_acc_montgomery(int32_t *, const int32_t *, const int32_t *, const int32_t *);
+extern void PQCLEAN_DILITHIUM5_AARCH64__asm_polyvecl_pointwise_acc_montgomery(int32_t *, const int32_t *, const int32_t *, const int32_t *);
 void polyvecl_pointwise_acc_montgomery(poly *w,
                                        const polyvecl *u,
                                        const polyvecl *v) {
-    PQCLEAN_dilithium5_AARCH64_asm_polyvecl_pointwise_acc_montgomery(w->coeffs, u->vec[0].coeffs, v->vec[0].coeffs, l_montgomery_const);
+    PQCLEAN_DILITHIUM5_AARCH64__asm_polyvecl_pointwise_acc_montgomery(w->coeffs, u->vec[0].coeffs, v->vec[0].coeffs, l_montgomery_const);
 }
 
 /*************************************************
