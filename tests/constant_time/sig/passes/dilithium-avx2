{
   Rejection sampling for uniformly distributed public A matrix
   Memcheck:Cond
   ...
   fun:pqcrystals_dilithium*_avx2_poly_uniform_4x
   fun:pqcrystals_dilithium*_avx2_polyvec_matrix_expand_row*
}
{
   Rejection sampling for uniformly distributed public A matrix
   Memcheck:Value8
   ...
   fun:pqcrystals_dilithium*_avx2_poly_uniform_4x
   fun:pqcrystals_dilithium*_avx2_polyvec_matrix_expand_row*
}


{
   Rejection sampling for s1 and s2
   Memcheck:Cond
   ...
   fun:pqcrystals_dilithium*_avx2_poly_uniform_eta_4x
   fun:pqcrystals_dilithium*_avx2_keypair
}
{
   Rejection sampling for s1 and s2
   Memcheck:Value8
   ...
   fun:pqcrystals_dilithium*_avx2_poly_uniform_eta_4x
   fun:pqcrystals_dilithium*_avx2_keypair
}

{
   Rejection sampling for y
   Memcheck:Cond
   ...
   fun:pqcrystals_dilithium*_avx2_poly_uniform_gamma1m1_4x
   fun:pqcrystals_dilithium*_avx2_signature
}
{
   Rejection sampling for y
   Memcheck:Value8
   ...
   fun:pqcrystals_dilithium*_avx2_poly_uniform_gamma1m1_4x
   fun:pqcrystals_dilithium*_avx2_signature
}
{
   Rejection sampling for s1 and s2
   Memcheck:Cond
   ...
   fun:pqcrystals_dilithium*_avx2_poly_uniform_eta_preinit
   fun:pqcrystals_dilithium*_avx2_poly_uniform_eta
   fun:pqcrystals_dilithium*_avx2_keypair
}
{
   Rejection sampling for s1 and s2
   Memcheck:Value8
   ...
   fun:pqcrystals_dilithium*_avx2_poly_uniform_eta_preinit
   fun:pqcrystals_dilithium*_avx2_poly_uniform_eta
   fun:pqcrystals_dilithium*_avx2_keypair
}
{
   Rejection sampling for y
   Memcheck:Cond
   ...
   fun:pqcrystals_dilithium*_avx2_poly_uniform_gamma1m1_preinit
   fun:pqcrystals_dilithium*_avx2_poly_uniform_gamma1m1
   fun:pqcrystals_dilithium*_avx2_signature
}
{
   Rejection sampling for y
   Memcheck:Value8
   ...
   fun:pqcrystals_dilithium*_avx2_poly_uniform_gamma1m1_preinit
   fun:pqcrystals_dilithium*_avx2_poly_uniform_gamma1m1
   fun:pqcrystals_dilithium*_avx2_signature
}
{
   Rejection sampling for challenge
   Memcheck:Cond
   fun:pqcrystals_dilithium*_avx2_poly_challenge
}
{
   Rejection sampling for challenge
   Memcheck:Value8
   fun:pqcrystals_dilithium*_avx2_poly_challenge
}
{
   Rejection sampling for signature distribution
   Memcheck:Cond
   ...
   src:sign.c:285 # Call to poly_chknorm
   # fun:pqcrystals_dilithium*_avx2_signature
}
{
   Rejection sampling for signature distribution
   Memcheck:Cond
   ...
   src:sign.c:300 # Call to poly_chknorm
   # fun:pqcrystals_dilithium*_avx2_signature
}
{
   Rejection sampling for signature distribution
   Memcheck:Cond
   ...
   src:sign.c:307 # Call to poly_chknorm
   # fun:pqcrystals_dilithium*_avx2_signature
}
{
   Hint does not need to be computed in constant time
   Memcheck:Cond
   ...
   fun:pqcrystals_dilithium*_avx2_poly_make_hint
   src:sign.c:311 # fun:pqcrystals_dilithium*_ref_signature
}
{
   Hint does not need to be computed in constant time
   Memcheck:Value8
   ...
   fun:pqcrystals_dilithium*_avx2_poly_make_hint
   src:sign.c:311 # fun:pqcrystals_dilithium*_ref_signature
}
{
   Rejection sampling for hint
   Memcheck:Cond
   ...
   src:sign.c:312 # Checking number of 1 bits in hint
   # fun:pqcrystals_dilithium*_avx2_signature
}
{
   Hint positions are not secret
   Memcheck:Cond
   ...
   src:sign.c:316 # memcpy
   # fun:pqcrystals_dilithium*_avx2_signature
}
{
   Hint positions are not secret
   Memcheck:Value8
   ...
   src:sign.c:316 # memcpy
   # fun:pqcrystals_dilithium*_avx2_signature
}
{
   Packing routines do not need to be constant time
   Memcheck:Cond
   fun:pqcrystals_dilithium*_avx2_pack_sig
   fun:pqcrystals_dilithium*_avx2_signature
}
{
   Verification is not done in constant time
   Memcheck:Cond
   fun:pqcrystals_dilithium*_avx2_verify
}

